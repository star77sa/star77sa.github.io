<?xml version="1.0" encoding="UTF-8"?>
<rss  xmlns:atom="http://www.w3.org/2005/Atom" 
      xmlns:media="http://search.yahoo.com/mrss/" 
      xmlns:content="http://purl.org/rss/1.0/modules/content/" 
      xmlns:dc="http://purl.org/dc/elements/1.1/" 
      version="2.0">
<channel>
<title>Time Series</title>
<link>https://star77sa.github.io/</link>
<atom:link href="https://star77sa.github.io/index.xml" rel="self" type="application/rss+xml"/>
<description></description>
<generator>quarto-1.4.540</generator>
<lastBuildDate>Mon, 22 Jan 2024 15:00:00 GMT</lastBuildDate>
<item>
  <title>선형대수학</title>
  <dc:creator>고경수 </dc:creator>
  <link>https://star77sa.github.io/posts/Linear_Algebra/선형대수학.html</link>
  <description><![CDATA[ 





<section id="선형대수학" class="level1">
<h1>선형대수학</h1>
<p>선형 방정식만을 다룬다.</p>
<p><img src="https://latex.codecogs.com/png.latex?%5Ccancel%7Bax%5E2%7D+bx+c=0"></p>
<p>행렬과 벡터에 대해서 공부하는 학문이다.</p>
<p>하고자 하는 것: 연립 1차 방정식을 푸는 것.</p>
<p><img src="https://latex.codecogs.com/png.latex?%7B%5Ccolor%7BRed%7D1%7D%7B%5Ccolor%7BSkyBlue%7Dx%7D%20+%20%7B%5Ccolor%7BRed%7D2%7D%7B%5Ccolor%7BSkyBlue%7Dy%7D%20=%20%7B%5Ccolor%7BSkyBlue%7D4%7D%20"></p>
<p><img src="https://latex.codecogs.com/png.latex?%7B%5Ccolor%7BRed%7D2%7D%7B%5Ccolor%7BSkyBlue%7Dx%7D%20+%20%7B%5Ccolor%7BRed%7D5%7D%7B%5Ccolor%7BSkyBlue%7Dy%7D%20=%20%7B%5Ccolor%7BSkyBlue%7D9%7D%20"></p>
<p><img src="https://latex.codecogs.com/png.latex?%20%5Cbegin%7Bpmatrix%7D%20%7B%5Ccolor%7BRed%7D1%7D%20&amp;%20%7B%5Ccolor%7BRed%7D2%7D%20%5C%5C%20%7B%5Ccolor%7BRed%7D2%7D%20&amp;%20%7B%5Ccolor%7BRed%7D5%7D%20%5Cend%7Bpmatrix%7D%20%5Cbegin%7Bpmatrix%7D%20%7B%5Ccolor%7BSkyBlue%7Dx%7D%20%5C%5C%20%7B%5Ccolor%7BSkyBlue%7D4%7D%20%5Cend%7Bpmatrix%7D%20=%20%5Cbegin%7Bpmatrix%7D%20%7B%5Ccolor%7BSkyBlue%7D4%7D%20%5C%5C%20%7B%5Ccolor%7BSkyBlue%7D9%7D%20%5Cend%7Bpmatrix%7D%20"></p>
<p><img src="https://latex.codecogs.com/png.latex?%5Ctext%7B%5C%20matrix%20%5C%20%20vector%20%5C%20%5C%20%5C%20vector%7D"></p>
<section id="전치-transpose" class="level2">
<h2 class="anchored" data-anchor-id="전치-transpose">전치 (Transpose)</h2>
<p><img src="https://latex.codecogs.com/png.latex?A"> -&gt; <img src="https://latex.codecogs.com/png.latex?A%5ET"></p>
<p><img src="https://latex.codecogs.com/png.latex?a_%7Bij%7D"> -&gt; <img src="https://latex.codecogs.com/png.latex?a_%7Bji%7D"></p>
<p><img src="https://latex.codecogs.com/png.latex?A%20=%20%5Cbegin%7Bpmatrix%7D%201%20&amp;%202%20%5C%5C%203%20&amp;%204%20%5Cend%7Bpmatrix%7D">, <img src="https://latex.codecogs.com/png.latex?A%5ET%20=%20%5Cbegin%7Bpmatrix%7D%201%20&amp;%203%20%5C%5C%202%20&amp;%204%20%5Cend%7Bpmatrix%7D"></p>
<ol type="1">
<li><p><img src="https://latex.codecogs.com/png.latex?(A%5ET)%5ET%20=%20A"></p></li>
<li><p><img src="https://latex.codecogs.com/png.latex?(A+B)%5ET%20=%20A%5ET%20+%20B%5ET"></p></li>
<li><p><img src="https://latex.codecogs.com/png.latex?(AB)%5ET%20=%20B%5ETA%5ET"></p></li>
<li><p><img src="https://latex.codecogs.com/png.latex?(CA)%5ET%20=%20CA%5ET"></p></li>
<li><p><img src="https://latex.codecogs.com/png.latex?%5Ctext%7Bdet%7D(A%5ET)%20=%20%5Ctext%7Bdet%7D(A)"></p></li>
<li><p><img src="https://latex.codecogs.com/png.latex?(A%5ET)%5E%7B-1%7D%20=%20(A%5E%7B-1%7D)%5ET"></p></li>
</ol>
</section>
<section id="내적과-정사영-dot-product-projection" class="level2">
<h2 class="anchored" data-anchor-id="내적과-정사영-dot-product-projection">내적과 정사영 (dot product &amp; projection)</h2>
<p>내적: 두 벡터가 닮은 정도를 알아내는데 사용할 수 있다.</p>
<p>inner product <img src="https://latex.codecogs.com/png.latex?%5Csupset"> dot prodect <img src="https://latex.codecogs.com/png.latex?="> scalar product</p>
<p><img src="https://latex.codecogs.com/png.latex?%20%5Cbegin%7Bpmatrix%7D%201%20%5C%5C%203%20%5Cend%7Bpmatrix%7D%20%5Ccdot%20%5Cbegin%7Bpmatrix%7D%205%20%5C%5C%201%20%5Cend%7Bpmatrix%7D%20=%205+3%20=%208%20"></p>
<p><img src="https://latex.codecogs.com/png.latex?a%5ETb%20=%20%5ClVert%20a%20%5CrVert%20%5ClVert%20b%20%5CrVert%20cos%5Ctheta%20=%20%5ClVert%20a%20%5CrVert%20cos%5Ctheta%20%5ClVert%20b%20%5CrVert%20=%20%5ClVert%20b%20%5CrVert%20cos%5Ctheta%20%5ClVert%20a%20%5CrVert"></p>
<pre><code>                a에서 b로의 정사영 / b에서 a로의 정사영</code></pre>
<p>” 내적은 정사영이다. ”</p>
<p><img src="https://latex.codecogs.com/png.latex?a%5ETb%20=%20%5ClVert%20a%20%5CrVert%20%5ClVert%20a%20%5CrVert%20=%20%5ClVert%20a%20%5CrVert%5E2"></p>
<p>a 벡터의 크기를 구할 때 <img src="https://latex.codecogs.com/png.latex?%5Csqrt%7Ba%5ETa%7D"> 이런식으로도 많이 구함</p>
<p>단위벡터(unit vector): 크기가 1인 벡터</p>
<p><img src="https://latex.codecogs.com/png.latex?%5Cfrac%7Ba%7D%7B%5Csqrt%7Ba%5ET%7D%7Ba%7D%7D%20=%20%5Cfrac%7Ba%7D%7B%5ClVert%20a%20%5CrVert%7D"> : Normalize</p>
<p><img src="https://latex.codecogs.com/png.latex?a%20%5Ccdot%20b"> =&gt; 같은 방향일때 가장 크고 반대 방향일 때 가장 작으며 직각일때 0</p>
</section>
<section id="벡터의-norm" class="level2">
<h2 class="anchored" data-anchor-id="벡터의-norm">벡터의 norm</h2>
<section id="norm" class="level3">
<h3 class="anchored" data-anchor-id="norm">2-norm</h3>
<p><img src="https://latex.codecogs.com/png.latex?a=%5Cbegin%7Bpmatrix%7D%201%5C%5C2%5C%5C3%20%5Cend%7Bpmatrix%7D,%7C%7Ca%7C%7C%20_%7B2%7D%20=%20%5Csqrt%7Ba%5ETa%7D%20=%20%5Csqrt%7B1%5E2%20+%202%5E2%20+%203%5E2%7D"> (<img src="https://latex.codecogs.com/png.latex?l_2">-norm)</p>
</section>
<section id="norm-1" class="level3">
<h3 class="anchored" data-anchor-id="norm-1">1-norm</h3>
<p><img src="https://latex.codecogs.com/png.latex?b=%5Cbegin%7Bpmatrix%7D%201%5C%5C2%5C%5C3%20%5Cend%7Bpmatrix%7D">, <img src="https://latex.codecogs.com/png.latex?%5ClVert%20b%20%5CrVert_1%20=%201+2+3%20=%206"> (<img src="https://latex.codecogs.com/png.latex?l_1">-norm)</p>
</section>
<section id="p-norm" class="level3">
<h3 class="anchored" data-anchor-id="p-norm">p-norm</h3>
<p><img src="https://latex.codecogs.com/png.latex?(%7C%E3%80%80%7C%5Ep+%7C%E3%80%80%7C%5Ep+%7C%E3%80%80%7C%5Ep+%20...%20)%5E%5Cfrac%7B1%7D%7Bp%7D">, <img src="https://latex.codecogs.com/png.latex?(p%5Cgeq%201)"></p>
<p><code>+</code> <img src="https://latex.codecogs.com/png.latex?l_0">-norm 은 0이아닌 성분의 “개수”</p>
</section>
</section>
<section id="행렬의-곱셈과-네-가지-관점" class="level2">
<h2 class="anchored" data-anchor-id="행렬의-곱셈과-네-가지-관점">행렬의 곱셈과 네 가지 관점</h2>
<section id="내적으로-바라보기" class="level3">
<h3 class="anchored" data-anchor-id="내적으로-바라보기">1. 내적으로 바라보기</h3>
<p><img src="https://latex.codecogs.com/png.latex?AB=%5Cbegin%7Bpmatrix%7Da_1%5ET%5C%5Ca_2%5ET%5C%5Ca_3%5ET%5Cend%7Bpmatrix%7D%20%5Cbegin%7Bpmatrix%7Db_1&amp;b_2&amp;b_3%5Cend%7Bpmatrix%7D=%5Cbegin%7Bpmatrix%7Da_1%5ETb_1&amp;a_1%5ETb_2&amp;a_1%5ETb_3%5C%5Ca_2%5ETb_1&amp;a_2%5ETb_2&amp;a_2%5ETb_3%5C%5Ca_3%5ETb_1&amp;a_3%5ETb_2&amp;a_3%5ETb_3%5Cend%7Bpmatrix%7D"></p>
</section>
<section id="rank-1-matrix의-합" class="level3">
<h3 class="anchored" data-anchor-id="rank-1-matrix의-합">2. rank-1 matrix의 합</h3>
<p><img src="https://latex.codecogs.com/png.latex?AB%20=%20%5Cbegin%7Bpmatrix%7Da_1&amp;a_2&amp;a_3%5Cend%7Bpmatrix%7D%5Cbegin%7Bpmatrix%7Db_1%5ET%5C%5Cb_2%5ET%5C%5Cb_3%5ET%5Cend%7Bpmatrix%7D=a_1b_1%5ET+a_2b_2%5ET+a_3b_3%5ET"> ← 각각은 rank1 matrix 이다.</p>
</section>
<section id="column-space로-바라보기" class="level3">
<h3 class="anchored" data-anchor-id="column-space로-바라보기">3. column space로 바라보기</h3>
<p><code>-</code> column space?</p>
<p><img src="https://latex.codecogs.com/png.latex?AB%20=%20%5Cbegin%7Bpmatrix%7Da_1&amp;a_2&amp;a_3%5Cend%7Bpmatrix%7D%5Cbegin%7Bpmatrix%7Dx_1%5C%5Cx_2%5C%5Cx_3%5Cend%7Bpmatrix%7D=a_1x_1+a_2x_2+a_3x_3"></p>
</section>
<section id="row-space로-바라보기" class="level3">
<h3 class="anchored" data-anchor-id="row-space로-바라보기">4. row space로 바라보기</h3>
<p><img src="https://latex.codecogs.com/png.latex?AB%20=%20%5Cbegin%7Bpmatrix%7Dx_1&amp;x_2&amp;x_3%5Cend%7Bpmatrix%7D%5Cbegin%7Bpmatrix%7Da_1%5ET%5C%5Ca_2%5ET%5C%5Ca_3%5ET%5Cend%7Bpmatrix%7D=x_1a_1%5ET+x_2a_2%5ET+x_3a_3%5ET"></p>
<ul>
<li>transformer 이해에 도움이 된다.</li>
</ul>
</section>
</section>
<section id="span과-column-space열공간" class="level2">
<h2 class="anchored" data-anchor-id="span과-column-space열공간">span과 column space(열공간)</h2>
<ul>
<li>Linear combination</li>
</ul>
<p><img src="https://latex.codecogs.com/png.latex?%7B%5Ccolor%7Bred%7Da_1%7Dv_1%20+%20%7B%5Ccolor%7Bred%7Da_2%7Dv_2%20+%20%7B%5Ccolor%7Bred%7Da_3%7Dv_3"></p>
<p><img src="https://latex.codecogs.com/png.latex?%7B%5Ccolor%7Bred%7Da_1,%20a_2,%20a_3%7D"> : 스칼라</p>
<p><img src="https://latex.codecogs.com/png.latex?v_1,%20v_2,%20v_3"> : 벡터</p>
<ul>
<li><p>내가 가진 벡터들로 표현할 수 있는 영역은 뭘까? → span</p>
<p>2차원 전체(서로 다른 두 벡터), 라인(단위 벡터가 같은 두 벡터), 점(<img src="https://latex.codecogs.com/png.latex?%5Cbegin%7Bpmatrix%7D0%5C%5C0%5Cend%7Bpmatrix%7D">인 두 벡터) 등 …</p></li>
</ul>
<p>$ C(A) $</p>
<p>$ range(A) $</p>
<p>column space 표기법</p>
</section>
<section id="선형-독립과-기저-linearly-independent-basis" class="level2">
<h2 class="anchored" data-anchor-id="선형-독립과-기저-linearly-independent-basis">선형 독립과 기저 (linearly independent &amp; basis)</h2>
<ul>
<li><p>벡터의 활동범위가 다르면 선형 독립이다.</p></li>
<li><p>직교하면 무조건 독립이다. 하지만 독립이라고 직교하는 건 아니다.</p></li>
</ul>
<p><img src="https://latex.codecogs.com/png.latex?a_1%5Cbold%7Bv_1%7D%20+%20a_2%5Cbold%7Bv_2%7D%20+%20a_3%5Cbold%7Bv_3%7D%20+%20...%20=%20%5Cbold%7B0%7D"> 이 식이 성립하기 위해 계수(<img src="https://latex.codecogs.com/png.latex?a_1,%20a_2,%20a_3,%20...">)가 모두 0 이어야 한다면 이는 선형 독립이다.</p>
<p>ex) <img src="https://latex.codecogs.com/png.latex?-2%5Cbegin%7Bpmatrix%7D1%5C%5C1%5Cend%7Bpmatrix%7D+1%5Cbegin%7Bpmatrix%7D2%5C%5C2%5Cend%7Bpmatrix%7D%20=%200"> 이런경우는 linearly dependent 한 케이스.</p>
<section id="basis" class="level3">
<h3 class="anchored" data-anchor-id="basis">basis</h3>
<ul>
<li><p>어떤 공간을 이루는 필수적인 구성요소</p></li>
<li><p>어떤 벡터공간 V의 벡터들이 선형독립이면서 벡터공간 V 전체를 생성할 수 있다면 이 벡터들의 집합을 말한다.</p></li>
<li><p>벡터공간 <img src="https://latex.codecogs.com/png.latex?R%5Em">의 임의의 원소를 표현하기 위해 필요한 최소한의 벡터로 이루어진 집합</p></li>
</ul>
</section>
</section>
<section id="항등행렬-역행렬-직교행렬-indentity-matrix-inverse-orthogonal-matrix" class="level2">
<h2 class="anchored" data-anchor-id="항등행렬-역행렬-직교행렬-indentity-matrix-inverse-orthogonal-matrix">항등행렬, 역행렬, 직교행렬 (indentity matrix &amp; inverse &amp; orthogonal matrix)</h2>


</section>
</section>

 ]]></description>
  <guid>https://star77sa.github.io/posts/Linear_Algebra/선형대수학.html</guid>
  <pubDate>Mon, 22 Jan 2024 15:00:00 GMT</pubDate>
</item>
<item>
  <title>Python_3 seaborn, plotnine</title>
  <dc:creator>고경수 </dc:creator>
  <link>https://star77sa.github.io/posts/Python/python_3.html</link>
  <description><![CDATA[ 





<p>import</p>
<div id="cell-2" class="cell" data-execution_count="6">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb1-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> numpy <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> np</span>
<span id="cb1-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> pandas <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> pd</span>
<span id="cb1-3"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> matplotlib.pyplot <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> plt</span>
<span id="cb1-4"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> plotnine <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span></span></code></pre></div>
</div>
<div id="cell-3" class="cell" data-execution_count="7">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb2-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> matplotlib</span>
<span id="cb2-2">matplotlib.rcParams[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'figure.dpi'</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">120</span></span></code></pre></div>
</div>
<div id="cell-4" class="cell" data-execution_count="8">
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb3-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> warnings</span>
<span id="cb3-2">warnings.filterwarnings(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'ignore'</span>)</span></code></pre></div>
</div>
<section id="seaborn" class="level2">
<h2 class="anchored" data-anchor-id="seaborn">Seaborn</h2>
<div id="cell-6" class="cell" data-execution_count="9">
<div class="sourceCode cell-code" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb4-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> seaborn <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> sns</span></code></pre></div>
</div>
<p><code>-</code> 개념차이</p>
<ul>
<li>matplotlib: 벡터 친화적</li>
<li>seaborn: 데이터프레임 친화적</li>
</ul>
<p><code>-</code> 데이터프레임 친화적인 시각화 툴이 왜 강력한가?</p>
<p>분석할 데이터가 tabula data 형식인 경우가 많다. matplotlib은 여전히 강력하지만, seaborn등 데이터프레임 친화적 패키지가 우수한 경우가 많다.</p>
<div id="cell-8" class="cell" data-execution_count="10">
<div class="sourceCode cell-code" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb5-1">df <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pd.read_csv(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"https://raw.githubusercontent.com/guebin/DV2023/main/posts/titanic.csv"</span>)</span>
<span id="cb5-2">df.head()</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="10">
<div>


<table class="dataframe table table-sm table-striped small" data-quarto-postprocess="true" data-border="1">
<thead>
<tr class="header">
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th">PassengerId</th>
<th data-quarto-table-cell-role="th">Survived</th>
<th data-quarto-table-cell-role="th">Pclass</th>
<th data-quarto-table-cell-role="th">Name</th>
<th data-quarto-table-cell-role="th">Sex</th>
<th data-quarto-table-cell-role="th">Age</th>
<th data-quarto-table-cell-role="th">SibSp</th>
<th data-quarto-table-cell-role="th">Parch</th>
<th data-quarto-table-cell-role="th">Ticket</th>
<th data-quarto-table-cell-role="th">Fare</th>
<th data-quarto-table-cell-role="th">Cabin</th>
<th data-quarto-table-cell-role="th">Embarked</th>
<th data-quarto-table-cell-role="th">logFare</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td data-quarto-table-cell-role="th">0</td>
<td>1</td>
<td>0</td>
<td>3</td>
<td>Braund, Mr. Owen Harris</td>
<td>male</td>
<td>22.0</td>
<td>1</td>
<td>0</td>
<td>A/5 21171</td>
<td>7.2500</td>
<td>NaN</td>
<td>S</td>
<td>1.981001</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">1</td>
<td>2</td>
<td>1</td>
<td>1</td>
<td>Cumings, Mrs. John Bradley (Florence Briggs Th...</td>
<td>female</td>
<td>38.0</td>
<td>1</td>
<td>0</td>
<td>PC 17599</td>
<td>71.2833</td>
<td>C85</td>
<td>C</td>
<td>4.266662</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">2</td>
<td>3</td>
<td>1</td>
<td>3</td>
<td>Heikkinen, Miss. Laina</td>
<td>female</td>
<td>26.0</td>
<td>0</td>
<td>0</td>
<td>STON/O2. 3101282</td>
<td>7.9250</td>
<td>NaN</td>
<td>S</td>
<td>2.070022</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">3</td>
<td>4</td>
<td>1</td>
<td>1</td>
<td>Futrelle, Mrs. Jacques Heath (Lily May Peel)</td>
<td>female</td>
<td>35.0</td>
<td>1</td>
<td>0</td>
<td>113803</td>
<td>53.1000</td>
<td>C123</td>
<td>S</td>
<td>3.972177</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">4</td>
<td>5</td>
<td>0</td>
<td>3</td>
<td>Allen, Mr. William Henry</td>
<td>male</td>
<td>35.0</td>
<td>0</td>
<td>0</td>
<td>373450</td>
<td>8.0500</td>
<td>NaN</td>
<td>S</td>
<td>2.085672</td>
</tr>
</tbody>
</table>

</div>
</div>
</div>
<div id="cell-9" class="cell" data-execution_count="11">
<div class="sourceCode cell-code" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb6-1">sns.scatterplot(</span>
<span id="cb6-2">    df,</span>
<span id="cb6-3">    x<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'logFare'</span>,</span>
<span id="cb6-4">    y<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Age'</span>,</span>
<span id="cb6-5">    hue<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Sex'</span>,</span>
<span id="cb6-6">    style<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Survived'</span>,style_order<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>],</span>
<span id="cb6-7">    alpha<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.8</span></span>
<span id="cb6-8">)</span></code></pre></div>
<div class="cell-output cell-output-display">
<div>
<figure class="figure">
<p><img src="https://star77sa.github.io/posts/Python/python_3_files/figure-html/cell-7-output-1.png" class="img-fluid figure-img"></p>
</figure>
</div>
</div>
</div>
<div id="cell-10" class="cell" data-execution_count="14">
<div class="sourceCode cell-code" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb7-1">sns.scatterplot(</span>
<span id="cb7-2">    df,</span>
<span id="cb7-3">    x<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'logFare'</span>,</span>
<span id="cb7-4">    y<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Age'</span>,</span>
<span id="cb7-5">    hue<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Sex'</span>,</span>
<span id="cb7-6">    style<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Survived'</span>,style_order<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>],</span>
<span id="cb7-7">    alpha<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.8</span></span>
<span id="cb7-8">)</span>
<span id="cb7-9">fig <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> plt.gcf()</span>
<span id="cb7-10">ax <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> plt.gca()</span>
<span id="cb7-11">ax.set_title(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Scatter Plot'</span>)</span>
<span id="cb7-12">fig.add_axes([<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.6</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.2</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.25</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.25</span>])</span>
<span id="cb7-13">ax_mini <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> plt.gca()</span>
<span id="cb7-14">ax_mini.hist(df.Age)</span>
<span id="cb7-15">ax_mini.hist(df.Age[df.Survived<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>])</span>
<span id="cb7-16">ax_mini.set_title(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Histogram'</span>)</span>
<span id="cb7-17">fig.suptitle(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'TITANIC'</span>)</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="14">
<pre><code>Text(0.5, 0.98, 'TITANIC')</code></pre>
</div>
<div class="cell-output cell-output-display">
<div>
<figure class="figure">
<p><img src="https://star77sa.github.io/posts/Python/python_3_files/figure-html/cell-8-output-2.png" class="img-fluid figure-img"></p>
</figure>
</div>
</div>
</div>
<ul>
<li>간단한 시각화는 matplotlib이 유리.</li>
<li>보통 matplotlib이 더 본질적인 이해를 도와준다. 즉 seaborn에 대한 아주 고급기능은 오히려 matplotlib에 대한 통찰이 있어야 가능하다.</li>
<li>plotnine을 배우는게 더 좋다(더 우수함 + ggplot2도 같이 배워짐)</li>
<li>plotly가 모든면에서 seaborn을 압도하는 추세.</li>
</ul>


</section>

 ]]></description>
  <guid>https://star77sa.github.io/posts/Python/python_3.html</guid>
  <pubDate>Mon, 22 Jan 2024 15:00:00 GMT</pubDate>
</item>
<item>
  <title>Python_2 matplotlib</title>
  <dc:creator>고경수 </dc:creator>
  <link>https://star77sa.github.io/posts/Python/python_2.html</link>
  <description><![CDATA[ 





<section id="matplotlib" class="level2 page-columns page-full">
<h2 class="anchored" data-anchor-id="matplotlib">Matplotlib</h2>
<div id="cell-2" class="cell" data-execution_count="2">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb1-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> matplotlib.pyplot <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> plt</span></code></pre></div>
</div>
<section id="boxplot" class="level3">
<h3 class="anchored" data-anchor-id="boxplot">Boxplot</h3>
<p>Boxplot의 장점: 단순히 평균을 주는 것보다 데이터를 파악하고 직관을 얻기에 유리하다.</p>
<div id="cell-5" class="cell" data-execution_count="3">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb2-1">y1<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">75</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">75</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">76</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">76</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">77</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">77</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">78</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">79</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">79</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">98</span>] <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># A선생님에게 통계학을 배운 학생의 점수들</span></span>
<span id="cb2-2">y2<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">76</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">76</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">77</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">77</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">78</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">78</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">79</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">80</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">80</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">81</span>] <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># B선생님에게 통계학을 배운 학생의 점수들 </span></span>
<span id="cb2-3"></span>
<span id="cb2-4"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"A의 평균: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>np<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>mean(y1)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">, B의 평균: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>np<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>mean(y2)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb2-5">plt.boxplot([y1,y2])<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span></code></pre></div>
<div class="cell-output cell-output-error">
<pre><code>NameError: name 'np' is not defined</code></pre>
</div>
</div>
<p>정규분포가정을 하는 법(데이터를 보고 어떻게 정규분포라고 알 수 있는가?): 데이터의 히스토그램을 그려서 종 모양이 되는지 확인해본다.</p>
</section>
<section id="histogram" class="level3">
<h3 class="anchored" data-anchor-id="histogram">Histogram</h3>
<p>히스토그램 : X축이 변수의 구간, Y축은 그 구간에 포함된 빈도를 의미하는 그림</p>
<div id="cell-9" class="cell">
<div class="sourceCode cell-code" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb4-1">y<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">11</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">12</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">15</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">16</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">20</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">21</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">22</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">23</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">24</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">25</span>]</span>
<span id="cb4-2">plt.hist(y, bins<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>, <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">30</span>])<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> </span>
<span id="cb4-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># ;으로 결과 생략하기.</span></span>
<span id="cb4-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># bins : 가로축 구간의 갯수(막대의 갯수)</span></span>
<span id="cb4-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># range : 가로축의 범위 지정</span></span></code></pre></div>
<div class="cell-output cell-output-display">
<div>
<figure class="figure">
<p><img src="https://star77sa.github.io/posts/Python/python_2_files/figure-html/cell-4-output-1.png" class="img-fluid figure-img"></p>
</figure>
</div>
</div>
</div>
<div id="cell-10" class="cell">
<div class="sourceCode cell-code" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb5-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 나란히 그리기</span></span>
<span id="cb5-2">np.random.seed(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">77</span>)</span>
<span id="cb5-3">y1 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.random.randn(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10000</span>)</span>
<span id="cb5-4">y2 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.random.randn(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10000</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span> </span>
<span id="cb5-5">plt.hist([y1,y2],bins<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span></code></pre></div>
<div class="cell-output cell-output-display">
<div>
<figure class="figure">
<p><img src="https://star77sa.github.io/posts/Python/python_2_files/figure-html/cell-5-output-1.png" class="img-fluid figure-img"></p>
</figure>
</div>
</div>
</div>
<div id="cell-11" class="cell">
<div class="sourceCode cell-code" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb6-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># !pip install opencv-python</span></span>
<span id="cb6-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> cv2</span></code></pre></div>
</div>
</section>
<section id="histogram-응용-예제" class="level3">
<h3 class="anchored" data-anchor-id="histogram-응용-예제">Histogram 응용 예제</h3>
<div id="cell-13" class="cell">
<div class="sourceCode cell-code" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb7-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># !wget https://upload.wikimedia.org/wikipedia/commons/0/08/Unequalized_Hawkes_Bay_NZ.jpg</span></span>
<span id="cb7-2">img <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> cv2.imread(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Unequalized_Hawkes_Bay_NZ.jpg'</span>)</span>
<span id="cb7-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># !rm Unequalized_Hawkes_Bay_NZ.jpg</span></span></code></pre></div>
</div>
<p><code>!wget 주소</code>: 주소에 있는 이미지를 다운로드</p>
<p><code>!rm 파일이름</code>: 현재폴더에 “파일이름”을 삭제</p>
<p>다만 이런 명령어는 리눅스 기반에서 동작. 윈도우 환경에서는 동작하지 않는다.</p>
<div id="cell-15" class="cell">
<div class="sourceCode cell-code" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb8-1">plt.imshow(img)</span></code></pre></div>
<div class="cell-output cell-output-display">
<div>
<figure class="figure">
<p><img src="https://star77sa.github.io/posts/Python/python_2_files/figure-html/cell-8-output-1.png" class="img-fluid figure-img"></p>
</figure>
</div>
</div>
</div>
<div id="cell-16" class="cell">
<div class="sourceCode cell-code" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb9-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 이미지를 rgb로 각각 분리하고 각 색깔들의 히스토그램을 그려보기.</span></span>
<span id="cb9-2"></span>
<span id="cb9-3">r<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> img[:,:,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>] <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 빨강(R)</span></span>
<span id="cb9-4">g<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> img[:,:,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>] <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 녹색(G)</span></span>
<span id="cb9-5">b<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> img[:,:,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>] <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 파랑(B)</span></span>
<span id="cb9-6"></span>
<span id="cb9-7">plt.hist(r.reshape(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>),bins<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">255</span>,<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">255</span>))<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span></code></pre></div>
<div class="cell-output cell-output-display">
<div>
<figure class="figure">
<p><img src="https://star77sa.github.io/posts/Python/python_2_files/figure-html/cell-9-output-1.png" class="img-fluid figure-img"></p>
</figure>
</div>
</div>
</div>
<div id="cell-17" class="cell">
<div class="sourceCode cell-code" id="cb10" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb10-1">r.reshape(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="109">
<pre><code>array([127, 145, 149, ..., 146, 145, 144], dtype=uint8)</code></pre>
</div>
</div>
<ul>
<li>cv2.equalizeHist()를 이용하여 분포의 모양은 대략적으로 유지하면서 값을 퍼트리자!</li>
</ul>
<div id="cell-19" class="cell">
<div class="sourceCode cell-code" id="cb12" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb12-1">rr <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> cv2.equalizeHist(r)</span>
<span id="cb12-2">gg <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> cv2.equalizeHist(g)</span>
<span id="cb12-3">bb <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> cv2.equalizeHist(b)</span></code></pre></div>
</div>
<div id="cell-20" class="cell">
<div class="sourceCode cell-code" id="cb13" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb13-1">plt.hist(r.reshape(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>),bins<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">255</span>, <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">255</span>],label<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'before'</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb13-2">plt.hist(rr.reshape(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>),bins<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">255</span>,<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">255</span>],label<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'after'</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb13-3">plt.legend()</span></code></pre></div>
<div class="cell-output cell-output-display">
<div>
<figure class="figure">
<p><img src="https://star77sa.github.io/posts/Python/python_2_files/figure-html/cell-12-output-1.png" class="img-fluid figure-img"></p>
</figure>
</div>
</div>
</div>
<div id="cell-21" class="cell">
<div class="sourceCode cell-code" id="cb14" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb14-1">img2<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.stack([rr, gg, bb],axis<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span></code></pre></div>
</div>
<div id="cell-22" class="cell">
<div class="sourceCode cell-code" id="cb15" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb15-1">img.shape</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="116">
<pre><code>(683, 1024, 3)</code></pre>
</div>
</div>
<div id="cell-23" class="cell">
<div class="sourceCode cell-code" id="cb17" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb17-1">img2.shape</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="117">
<pre><code>(683, 1024, 3)</code></pre>
</div>
</div>
<div id="cell-24" class="cell">
<div class="sourceCode cell-code" id="cb19" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb19-1">plt.imshow(np.concatenate([img,img2],axis<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>))</span></code></pre></div>
<div class="cell-output cell-output-display">
<div>
<figure class="figure">
<p><img src="https://star77sa.github.io/posts/Python/python_2_files/figure-html/cell-16-output-1.png" class="img-fluid figure-img"></p>
</figure>
</div>
</div>
</div>
</section>
<section id="line-plot" class="level3">
<h3 class="anchored" data-anchor-id="line-plot">Line plot</h3>
<p><code>-</code> r–등의 옵션은 Markers + Line Styles + Colors 의 조합으로 표현가능</p>
<p>ref: https://matplotlib.org/stable/api/_as_gen/matplotlib.pyplot.plot.html</p>
<ul>
<li><code>--r</code>: 점선(dashed)스타일 + 빨간색</li>
<li><code>r--</code>: 빨간색 + 점선(dashed)스타일</li>
<li><code>:k</code>: 점선(dotted)스타일 + 검은색</li>
<li><code>k:</code>: 검은색 + 점선(dotted)스타일</li>
</ul>
<p>Line Styles</p>
<table class="table">
<thead>
<tr class="header">
<th style="text-align: center;">character</th>
<th style="text-align: center;">description</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td style="text-align: center;">‘-’</td>
<td style="text-align: center;">solid line style</td>
</tr>
<tr class="even">
<td style="text-align: center;">‘–’</td>
<td style="text-align: center;">dashed line style</td>
</tr>
<tr class="odd">
<td style="text-align: center;">‘-.’</td>
<td style="text-align: center;">dash-dot line style</td>
</tr>
<tr class="even">
<td style="text-align: center;">‘:’</td>
<td style="text-align: center;">dotted line style</td>
</tr>
</tbody>
</table>
<p>Colors</p>
<table class="table">
<thead>
<tr class="header">
<th style="text-align: center;">character</th>
<th style="text-align: center;">color</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td style="text-align: center;">‘b’</td>
<td style="text-align: center;">blue</td>
</tr>
<tr class="even">
<td style="text-align: center;">‘g’</td>
<td style="text-align: center;">green</td>
</tr>
<tr class="odd">
<td style="text-align: center;">‘r’</td>
<td style="text-align: center;">red</td>
</tr>
<tr class="even">
<td style="text-align: center;">‘c’</td>
<td style="text-align: center;">cyan</td>
</tr>
<tr class="odd">
<td style="text-align: center;">‘m’</td>
<td style="text-align: center;">magenta</td>
</tr>
<tr class="even">
<td style="text-align: center;">‘y’</td>
<td style="text-align: center;">yellow</td>
</tr>
<tr class="odd">
<td style="text-align: center;">‘k’</td>
<td style="text-align: center;">black</td>
</tr>
<tr class="even">
<td style="text-align: center;">‘w’</td>
<td style="text-align: center;">white</td>
</tr>
</tbody>
</table>
<p>Markers</p>
<table class="table">
<thead>
<tr class="header">
<th style="text-align: center;">character</th>
<th style="text-align: center;">description</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td style="text-align: center;">‘.’</td>
<td style="text-align: center;">point marker</td>
</tr>
<tr class="even">
<td style="text-align: center;">‘,’</td>
<td style="text-align: center;">pixel marker</td>
</tr>
<tr class="odd">
<td style="text-align: center;">‘o’</td>
<td style="text-align: center;">circle marker</td>
</tr>
<tr class="even">
<td style="text-align: center;">‘v’</td>
<td style="text-align: center;">triangle_down marker</td>
</tr>
<tr class="odd">
<td style="text-align: center;">‘^’</td>
<td style="text-align: center;">triangle_up marker</td>
</tr>
<tr class="even">
<td style="text-align: center;">‘&lt;’</td>
<td style="text-align: center;">triangle_left marker</td>
</tr>
<tr class="odd">
<td style="text-align: center;">‘&gt;’</td>
<td style="text-align: center;">triangle_right marker</td>
</tr>
<tr class="even">
<td style="text-align: center;">‘1’</td>
<td style="text-align: center;">tri_down marker</td>
</tr>
<tr class="odd">
<td style="text-align: center;">‘2’</td>
<td style="text-align: center;">tri_up marker</td>
</tr>
<tr class="even">
<td style="text-align: center;">‘3’</td>
<td style="text-align: center;">tri_left marker</td>
</tr>
<tr class="odd">
<td style="text-align: center;">‘4’</td>
<td style="text-align: center;">tri_right marker</td>
</tr>
<tr class="even">
<td style="text-align: center;">‘8’</td>
<td style="text-align: center;">octagon marker</td>
</tr>
<tr class="odd">
<td style="text-align: center;">‘s’</td>
<td style="text-align: center;">square marker</td>
</tr>
<tr class="even">
<td style="text-align: center;">‘p’</td>
<td style="text-align: center;">pentagon marker</td>
</tr>
<tr class="odd">
<td style="text-align: center;">‘P’</td>
<td style="text-align: center;">plus (filled) marker</td>
</tr>
<tr class="even">
<td style="text-align: center;">’*’</td>
<td style="text-align: center;">star marker</td>
</tr>
<tr class="odd">
<td style="text-align: center;">‘h’</td>
<td style="text-align: center;">hexagon1 marker</td>
</tr>
<tr class="even">
<td style="text-align: center;">‘H’</td>
<td style="text-align: center;">hexagon2 marker</td>
</tr>
<tr class="odd">
<td style="text-align: center;">‘+’</td>
<td style="text-align: center;">plus marker</td>
</tr>
<tr class="even">
<td style="text-align: center;">‘x’</td>
<td style="text-align: center;">x marker</td>
</tr>
<tr class="odd">
<td style="text-align: center;">‘X’</td>
<td style="text-align: center;">x (filled) marker</td>
</tr>
<tr class="even">
<td style="text-align: center;">‘D’</td>
<td style="text-align: center;">diamond marker</td>
</tr>
<tr class="odd">
<td style="text-align: center;">‘d’</td>
<td style="text-align: center;">thin_diamond marker</td>
</tr>
<tr class="even">
<td style="text-align: center;">‘|’</td>
<td style="text-align: center;">vline marker</td>
</tr>
<tr class="odd">
<td style="text-align: center;">’_’</td>
<td style="text-align: center;">hline marker</td>
</tr>
</tbody>
</table>
<div id="cell-28" class="cell">
<div class="sourceCode cell-code" id="cb20" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb20-1">plt.plot([<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>],<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'k:'</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span></code></pre></div>
<div class="cell-output cell-output-display">
<div>
<figure class="figure">
<p><img src="https://star77sa.github.io/posts/Python/python_2_files/figure-html/cell-17-output-1.png" class="img-fluid figure-img"></p>
</figure>
</div>
</div>
</div>
</section>
<section id="scatter-plot" class="level3">
<h3 class="anchored" data-anchor-id="scatter-plot">Scatter plot</h3>
<p>마커를 설정하면 끝</p>
<div id="cell-30" class="cell">
<div class="sourceCode cell-code" id="cb21" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb21-1">plt.plot([<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>],<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'o'</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span></code></pre></div>
<div class="cell-output cell-output-display">
<div>
<figure class="figure">
<p><img src="https://star77sa.github.io/posts/Python/python_2_files/figure-html/cell-18-output-1.png" class="img-fluid figure-img"></p>
</figure>
</div>
</div>
</div>
<div id="cell-31" class="cell">
<div class="sourceCode cell-code" id="cb22" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb22-1">plt.plot([<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>],<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'x'</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span></code></pre></div>
<div class="cell-output cell-output-display">
<div>
<figure class="figure">
<p><img src="https://star77sa.github.io/posts/Python/python_2_files/figure-html/cell-19-output-1.png" class="img-fluid figure-img"></p>
</figure>
</div>
</div>
</div>
<p>색깔변경</p>
<div id="cell-33" class="cell">
<div class="sourceCode cell-code" id="cb23" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb23-1">plt.plot([<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>],<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'or'</span>)</span></code></pre></div>
<div class="cell-output cell-output-display">
<div>
<figure class="figure">
<p><img src="https://star77sa.github.io/posts/Python/python_2_files/figure-html/cell-20-output-1.png" class="img-fluid figure-img"></p>
</figure>
</div>
</div>
</div>
</section>
<section id="dot-connected-plot" class="level3">
<h3 class="anchored" data-anchor-id="dot-connected-plot">dot-connected plot</h3>
<p>마커와 라인스타일을 동시에 사용하면 dot-connected plot이 된다.</p>
<div id="cell-36" class="cell">
<div class="sourceCode cell-code" id="cb24" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb24-1">plt.plot([<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>],<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'--o'</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span></code></pre></div>
<div class="cell-output cell-output-display">
<div>
<figure class="figure">
<p><img src="https://star77sa.github.io/posts/Python/python_2_files/figure-html/cell-21-output-1.png" class="img-fluid figure-img"></p>
</figure>
</div>
</div>
</div>
<div id="cell-37" class="cell">
<div class="sourceCode cell-code" id="cb25" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb25-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 색도 적용 가능</span></span>
<span id="cb25-2">plt.plot([<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>],<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'--or'</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span></code></pre></div>
<div class="cell-output cell-output-display">
<div>
<figure class="figure">
<p><img src="https://star77sa.github.io/posts/Python/python_2_files/figure-html/cell-22-output-1.png" class="img-fluid figure-img"></p>
</figure>
</div>
</div>
</div>
<p>순서를 바꿔도 상관없다.</p>
<p>ex) <code>--or</code> <code>r--o</code> 등..</p>
</section>
<section id="겹쳐-그리기" class="level3">
<h3 class="anchored" data-anchor-id="겹쳐-그리기">겹쳐 그리기</h3>
<div id="cell-40" class="cell">
<div class="sourceCode cell-code" id="cb26" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb26-1">plt.plot([<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>])</span>
<span id="cb26-2">plt.plot([<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>],<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'--o'</span>)</span></code></pre></div>
<div class="cell-output cell-output-display">
<div>
<figure class="figure">
<p><img src="https://star77sa.github.io/posts/Python/python_2_files/figure-html/cell-23-output-1.png" class="img-fluid figure-img"></p>
</figure>
</div>
</div>
</div>
<div id="cell-41" class="cell">
<div class="sourceCode cell-code" id="cb27" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb27-1">x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.linspace(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span>)</span>
<span id="cb27-2">eps <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.random.randn(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.2</span></span>
<span id="cb27-3">y <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> eps </span>
<span id="cb27-4">plt.plot(x,y,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'o'</span>)</span>
<span id="cb27-5">plt.plot(x,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>x,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'--'</span>,lw<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>)</span></code></pre></div>
<div class="cell-output cell-output-display">
<div>
<figure class="figure">
<p><img src="https://star77sa.github.io/posts/Python/python_2_files/figure-html/cell-24-output-1.png" class="img-fluid figure-img"></p>
</figure>
</div>
</div>
</div>
</section>
<section id="plt.plot-쓰지-않고-그림-그리기" class="level3 page-columns page-full">
<h3 class="anchored" data-anchor-id="plt.plot-쓰지-않고-그림-그리기"><code>plt.plot</code> 쓰지 않고 그림 그리기</h3>
<div class="quarto-figure quarto-figure-center page-columns page-full">
<figure class="figure page-columns page-full">
<p><img src="https://star77sa.github.io/posts/Python/python_2_files/figure-html/cell-43-1-image.png" class="img-fluid figure-img"></p>
<figcaption class="margin-caption">image.png</figcaption>
</figure>
</div>
<p>계층구조: Figure <img src="https://latex.codecogs.com/png.latex?%5Csupset"> [Axes,…] <img src="https://latex.codecogs.com/png.latex?%5Csupset"> YAxis, XAxis, [Line2D,…]</p>
<p>개념: - Figure(fig): 도화지 - Axes(ax): 도화지에 존재하는 그림틀 - Axis, Lines: 그림틀 위에 올려지는 물체(object)</p>
<p><code>-</code> 목표: 아래와 똑같은 그림을 plt.plot()을 쓰지 않고 만든다.</p>
<div id="cell-46" class="cell" data-execution_count="4">
<div class="sourceCode cell-code" id="cb28" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb28-1">plt.plot([<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>],<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'--o'</span>)</span></code></pre></div>
<div class="cell-output cell-output-display">
<div>
<figure class="figure">
<p><img src="https://star77sa.github.io/posts/Python/python_2_files/figure-html/cell-25-output-1.png" class="img-fluid figure-img"></p>
</figure>
</div>
</div>
</div>
<div id="cell-47" class="cell" data-execution_count="7">
<div class="sourceCode cell-code" id="cb29" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb29-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> matplotlib</span>
<span id="cb29-2"></span>
<span id="cb29-3">fig <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> plt.Figure()</span>
<span id="cb29-4">ax <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> fig.add_axes([<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.125</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.11</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.775</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.77</span>])</span>
<span id="cb29-5">ax.set_xlim([<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.15</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">3.15</span>])</span>
<span id="cb29-6">ax.set_ylim([<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.9</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">3.1</span>])</span>
<span id="cb29-7">line <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> matplotlib.lines.Line2D(</span>
<span id="cb29-8">    xdata<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>],</span>
<span id="cb29-9">    ydata<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>],</span>
<span id="cb29-10">    linestyle<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'--'</span>,</span>
<span id="cb29-11">    marker<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'o'</span></span>
<span id="cb29-12">)</span>
<span id="cb29-13">ax.add_line(line)</span>
<span id="cb29-14">fig</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="7">
<div>
<figure class="figure">
<p><img src="https://star77sa.github.io/posts/Python/python_2_files/figure-html/cell-26-output-1.png" class="img-fluid figure-img"></p>
</figure>
</div>
</div>
</div>
<section id="figure" class="level4">
<h4 class="anchored" data-anchor-id="figure">Figure</h4>
<div id="cell-49" class="cell" data-execution_count="10">
<div class="sourceCode cell-code" id="cb30" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb30-1">fig <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> plt.Figure()</span></code></pre></div>
</div>
<p>이 과정은 사실 클래스 -&gt; 인스턴스의 과정임 (plt라는 모듈안에 Figure라는 클래스가 있는데, 그 클래스에서 인스턴스를 만드는 과정임)</p>
<div id="cell-51" class="cell" data-execution_count="12">
<div class="sourceCode cell-code" id="cb31" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb31-1">fig <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 아직은 아무것도 없음</span></span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="12">
<pre><code>&lt;Figure size 640x480 with 0 Axes&gt;</code></pre>
</div>
</div>
</section>
<section id="axes" class="level4">
<h4 class="anchored" data-anchor-id="axes">Axes</h4>
<div id="cell-53" class="cell" data-execution_count="17">
<div class="sourceCode cell-code" id="cb33" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb33-1">ax <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> fig.add_axes([<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.125</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.11</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.775</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.77</span>])</span></code></pre></div>
</div>
<p><code>fig.add_axes</code>는 fig에 소속된 함수이며, 도화지에서 그림틀을 ‘추가하는’ 함수이다.</p>
<div id="cell-55" class="cell" data-execution_count="21">
<div class="sourceCode cell-code" id="cb34" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb34-1">fig <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># fig라는 이름의 도화지에는 추가된 그림틀이 보인다.</span></span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="21">
<div>
<figure class="figure">
<p><img src="https://star77sa.github.io/posts/Python/python_2_files/figure-html/cell-30-output-1.png" class="img-fluid figure-img"></p>
</figure>
</div>
</div>
</div>
</section>
<section id="axes-조정" class="level4">
<h4 class="anchored" data-anchor-id="axes-조정">Axes 조정</h4>
<div id="cell-57" class="cell" data-execution_count="19">
<div class="sourceCode cell-code" id="cb35" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb35-1">ax.set_xlim([<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.15</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">3.15</span>])</span>
<span id="cb35-2">ax.set_ylim([<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.9</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">3.1</span>])</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="19">
<pre><code>(0.9, 3.1)</code></pre>
</div>
</div>
<div id="cell-58" class="cell" data-execution_count="20">
<div class="sourceCode cell-code" id="cb37" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb37-1">fig</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="20">
<div>
<figure class="figure">
<p><img src="https://star77sa.github.io/posts/Python/python_2_files/figure-html/cell-32-output-1.png" class="img-fluid figure-img"></p>
</figure>
</div>
</div>
</div>
</section>
<section id="line" class="level4">
<h4 class="anchored" data-anchor-id="line">Line</h4>
<div id="cell-60" class="cell" data-execution_count="22">
<div class="sourceCode cell-code" id="cb38" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb38-1">line <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> matplotlib.lines.Line2D(</span>
<span id="cb38-2">    xdata<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>], </span>
<span id="cb38-3">    ydata<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>], </span>
<span id="cb38-4">    linestyle<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'--'</span>, </span>
<span id="cb38-5">    marker<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'o'</span></span>
<span id="cb38-6">)</span></code></pre></div>
</div>
<div id="cell-61" class="cell" data-execution_count="23">
<div class="sourceCode cell-code" id="cb39" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb39-1">ax.add_line(line)</span></code></pre></div>
</div>
<div id="cell-62" class="cell" data-execution_count="24">
<div class="sourceCode cell-code" id="cb40" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb40-1">fig</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="24">
<div>
<figure class="figure">
<p><img src="https://star77sa.github.io/posts/Python/python_2_files/figure-html/cell-35-output-1.png" class="img-fluid figure-img"></p>
</figure>
</div>
</div>
</div>
</section>
<section id="미니맵" class="level4">
<h4 class="anchored" data-anchor-id="미니맵">미니맵</h4>
<div id="cell-64" class="cell" data-execution_count="25">
<div class="sourceCode cell-code" id="cb41" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb41-1">fig <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> plt.Figure()</span>
<span id="cb41-2">ax <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> fig.add_axes([<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>])</span>
<span id="cb41-3">ax_mini <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> fig.add_axes([<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.4</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.2</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span>])</span>
<span id="cb41-4">fig</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="25">
<div>
<figure class="figure">
<p><img src="https://star77sa.github.io/posts/Python/python_2_files/figure-html/cell-36-output-1.png" class="img-fluid figure-img"></p>
</figure>
</div>
</div>
</div>
<div id="cell-65" class="cell" data-execution_count="26">
<div class="sourceCode cell-code" id="cb42" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb42-1">ax.plot([<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>],<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'--o'</span>)</span>
<span id="cb42-2">ax_mini.plot([<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>],<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'--or'</span>)</span>
<span id="cb42-3">fig</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="26">
<div>
<figure class="figure">
<p><img src="https://star77sa.github.io/posts/Python/python_2_files/figure-html/cell-37-output-1.png" class="img-fluid figure-img"></p>
</figure>
</div>
</div>
</div>
</section>
<section id="subplot" class="level4">
<h4 class="anchored" data-anchor-id="subplot">Subplot</h4>
<p><code>plt.subplots()</code></p>
<ul>
<li>예시 1</li>
</ul>
<div id="cell-69" class="cell" data-execution_count="28">
<div class="sourceCode cell-code" id="cb43" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb43-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># fig, axs = plt.subplots(2) </span></span>
<span id="cb43-2">fig, (ax1,ax2) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> plt.subplots(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>,figsize<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>))</span>
<span id="cb43-3">ax1.plot([<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>],<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'--r'</span>)</span>
<span id="cb43-4">ax2.plot([<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>],<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'--o'</span>)</span>
<span id="cb43-5">fig.tight_layout()</span>
<span id="cb43-6"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># plt.tight_layout()</span></span></code></pre></div>
<div class="cell-output cell-output-display">
<div>
<figure class="figure">
<p><img src="https://star77sa.github.io/posts/Python/python_2_files/figure-html/cell-38-output-1.png" class="img-fluid figure-img"></p>
</figure>
</div>
</div>
</div>
<ul>
<li>예시 2</li>
</ul>
<div id="cell-71" class="cell" data-execution_count="30">
<div class="sourceCode cell-code" id="cb44" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb44-1">fig, ((ax1,ax2),(ax3,ax4)) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> plt.subplots(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, figsize<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>))</span>
<span id="cb44-2">ax1.plot([<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>],<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'o'</span>, color<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'C0'</span>)</span>
<span id="cb44-3">ax2.plot([<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>],<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'o'</span>, color<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'C1'</span>)</span>
<span id="cb44-4">ax3.plot([<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>],<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'o'</span>, color<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'C2'</span>)</span>
<span id="cb44-5">ax4.plot([<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>],<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'o'</span>, color<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'C3'</span>)</span>
<span id="cb44-6">fig.tight_layout()</span></code></pre></div>
<div class="cell-output cell-output-display">
<div>
<figure class="figure">
<p><img src="https://star77sa.github.io/posts/Python/python_2_files/figure-html/cell-39-output-1.png" class="img-fluid figure-img"></p>
</figure>
</div>
</div>
</div>
</section>
<section id="title" class="level4">
<h4 class="anchored" data-anchor-id="title">Title</h4>
<section id="plt" class="level5">
<h5 class="anchored" data-anchor-id="plt">plt</h5>
<div id="cell-74" class="cell" data-execution_count="32">
<div class="sourceCode cell-code" id="cb45" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb45-1">plt.subplot(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">121</span>)</span>
<span id="cb45-2">plt.plot([<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>])</span>
<span id="cb45-3">plt.title(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'asdf'</span>)</span>
<span id="cb45-4">plt.subplot(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">122</span>)</span>
<span id="cb45-5">plt.plot([<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>])</span>
<span id="cb45-6">plt.title(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'1234'</span>)</span>
<span id="cb45-7">plt.tight_layout()</span></code></pre></div>
<div class="cell-output cell-output-display">
<div>
<figure class="figure">
<p><img src="https://star77sa.github.io/posts/Python/python_2_files/figure-html/cell-40-output-1.png" class="img-fluid figure-img"></p>
</figure>
</div>
</div>
</div>
</section>
<section id="fig" class="level5">
<h5 class="anchored" data-anchor-id="fig">fig</h5>
<div id="cell-76" class="cell" data-execution_count="33">
<div class="sourceCode cell-code" id="cb46" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb46-1">fig,(ax1,ax2) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> plt.subplots(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)</span>
<span id="cb46-2">ax1.set_title(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'asdf'</span>)</span>
<span id="cb46-3">ax2.set_title(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'1234'</span>)</span>
<span id="cb46-4">fig.suptitle(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'asdf1234'</span>)</span>
<span id="cb46-5">fig.tight_layout()</span></code></pre></div>
<div class="cell-output cell-output-display">
<div>
<figure class="figure">
<p><img src="https://star77sa.github.io/posts/Python/python_2_files/figure-html/cell-41-output-1.png" class="img-fluid figure-img"></p>
</figure>
</div>
</div>
</div>
<div id="cell-77" class="cell" data-execution_count="41">
<div class="sourceCode cell-code" id="cb47" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb47-1">fig, ((ax1, ax2, ax3), (ax4, ax5, ax6)) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> plt.subplots(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>)</span>
<span id="cb47-2">x,y <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>], [<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>]</span>
<span id="cb47-3">ax1.plot(x,y, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'ro'</span>)</span>
<span id="cb47-4">ax2.plot(x,y, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'go'</span>)</span>
<span id="cb47-5">ax3.plot(x,y, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'bo'</span>)</span>
<span id="cb47-6">ax4.plot(x,y, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'ro--'</span>)</span>
<span id="cb47-7">ax5.plot(x,y, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'go--'</span>)</span>
<span id="cb47-8">ax6.plot(x,y, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'bo--'</span>)</span></code></pre></div>
<div class="cell-output cell-output-display">
<div>
<figure class="figure">
<p><img src="https://star77sa.github.io/posts/Python/python_2_files/figure-html/cell-42-output-1.png" class="img-fluid figure-img"></p>
</figure>
</div>
</div>
</div>
<p>Summary</p>
<ul>
<li>라인플랏: 추세</li>
<li>스캐터플랏: 두 변수의 관계</li>
<li>박스플랏: 분포(일상용어)의 비교, 이상치</li>
<li>히스토그램: 분포(통계용어)파악</li>
<li>바플랏: 크기비교</li>
</ul>


</section>
</section>
</section>
</section>

 ]]></description>
  <guid>https://star77sa.github.io/posts/Python/python_2.html</guid>
  <pubDate>Mon, 22 Jan 2024 15:00:00 GMT</pubDate>
</item>
<item>
  <title>Python_1 자료형, Numpy, Pandas</title>
  <dc:creator>고경수 </dc:creator>
  <link>https://star77sa.github.io/posts/Python/python_1.html</link>
  <description><![CDATA[ 





<section id="파이썬-자료형" class="level2">
<h2 class="anchored" data-anchor-id="파이썬-자료형">파이썬 자료형</h2>
<p><code>a.f()</code> 형태를 읽는 팁</p>
<ul>
<li><code>a.f()</code>는 <code>f(a)</code>로 생각하면 편리함</li>
<li><code>a.f(2)</code>는 <code>f(a,2)</code>로 생각하면 편리함</li>
</ul>
<section id="리스트-컴프리헨션" class="level3">
<h3 class="anchored" data-anchor-id="리스트-컴프리헨션">리스트 컴프리헨션</h3>
<div id="cell-4" class="cell" data-execution_count="17">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb1-1">lst <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [a<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">**</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> a <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> [<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>]]</span>
<span id="cb1-2"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(lst)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1, 4, 9, 16]</code></pre>
</div>
</div>
<div id="cell-5" class="cell" data-execution_count="18">
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb3-1">[A<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span>B <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> A <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'XY'</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> B <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'123'</span>]</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="18">
<pre><code>['X1', 'X2', 'X3', 'Y1', 'Y2', 'Y3']</code></pre>
</div>
</div>
<div id="cell-6" class="cell" data-execution_count="19">
<div class="sourceCode cell-code" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb5-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># if 활용</span></span>
<span id="cb5-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># ex) 제곱수중에서 12로 나누어 떨어지는 수만 원소로 가지는 리스트를 만들고 싶다.</span></span>
<span id="cb5-3">[x<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">**</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> x <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">50</span>) <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> (x<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">**</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">12</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>)]</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="19">
<pre><code>[36, 144, 324, 576, 900, 1296, 1764, 2304]</code></pre>
</div>
</div>
</section>
<section id="튜플" class="level3">
<h3 class="anchored" data-anchor-id="튜플">튜플</h3>
<div id="cell-8" class="cell" data-execution_count="20">
<div class="sourceCode cell-code" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb7-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 변수값을 교환</span></span>
<span id="cb7-2">a <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> b<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">20</span></span>
<span id="cb7-3">a,b <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> b,a</span>
<span id="cb7-4">a</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="20">
<pre><code>20</code></pre>
</div>
</div>
<div id="cell-9" class="cell" data-execution_count="21">
<div class="sourceCode cell-code" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb9-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># for문에서의 사용</span></span>
<span id="cb9-2">lst <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'ksko'</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">201821991</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'M'</span>],</span>
<span id="cb9-3">       [<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'iu'</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">202254321</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'F'</span>],</span>
<span id="cb9-4">       [<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'hodong'</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">202011223</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'M'</span>]]</span>
<span id="cb9-5">lst</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="21">
<pre><code>[['ksko', 201821991, 'M'], ['iu', 202254321, 'F'], ['hodong', 202011223, 'M']]</code></pre>
</div>
</div>
<div id="cell-10" class="cell" data-execution_count="22">
<div class="sourceCode cell-code" id="cb11" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb11-1"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> i <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> lst:</span>
<span id="cb11-2">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(i)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>['ksko', 201821991, 'M']
['iu', 202254321, 'F']
['hodong', 202011223, 'M']</code></pre>
</div>
</div>
<div id="cell-11" class="cell" data-execution_count="23">
<div class="sourceCode cell-code" id="cb13" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb13-1"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> name, studentid, sex <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> lst:</span>
<span id="cb13-2">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(name,sex)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>ksko M
iu F
hodong M</code></pre>
</div>
</div>
<div id="cell-12" class="cell" data-execution_count="24">
<div class="sourceCode cell-code" id="cb15" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb15-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># dummy variable _</span></span>
<span id="cb15-2"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> _, studentid,_ <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> lst:</span>
<span id="cb15-3">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(studentid)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>201821991
202254321
202011223</code></pre>
</div>
</div>
<div id="cell-13" class="cell" data-execution_count="25">
<div class="sourceCode cell-code" id="cb17" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb17-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># *연산자</span></span>
<span id="cb17-2"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> name, <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>args <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> lst:</span>
<span id="cb17-3">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(name)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>ksko
iu
hodong</code></pre>
</div>
</div>
</section>
<section id="인덱싱고급-스트라이딩" class="level3">
<h3 class="anchored" data-anchor-id="인덱싱고급-스트라이딩">인덱싱고급 (스트라이딩)</h3>
<p>스트라이딩 [start:stop:step]</p>
<div id="cell-16" class="cell" data-execution_count="26">
<div class="sourceCode cell-code" id="cb19" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb19-1">lst <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">list</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'abcdefgh'</span>)</span>
<span id="cb19-2">lst</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="26">
<pre><code>['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h']</code></pre>
</div>
</div>
<div id="cell-17" class="cell" data-execution_count="27">
<div class="sourceCode cell-code" id="cb21" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb21-1">lst[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>:<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">8</span>:<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>]</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="27">
<pre><code>['a', 'c', 'e', 'g']</code></pre>
</div>
</div>
<div id="cell-18" class="cell" data-execution_count="28">
<div class="sourceCode cell-code" id="cb23" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb23-1">lst[::<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>]</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="28">
<pre><code>['a', 'c', 'e', 'g']</code></pre>
</div>
</div>
<div id="cell-19" class="cell" data-execution_count="29">
<div class="sourceCode cell-code" id="cb25" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb25-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 짝수/홀수 원소 추출</span></span>
<span id="cb25-2"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(lst[::<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>])</span>
<span id="cb25-3"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(lst[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>::<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>])</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>['a', 'c', 'e', 'g']
['b', 'd', 'f', 'h']</code></pre>
</div>
</div>
<div id="cell-20" class="cell" data-execution_count="30">
<div class="sourceCode cell-code" id="cb27" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb27-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># step = -1 이면 뒤집는다.</span></span>
<span id="cb27-2">lst[::<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="30">
<pre><code>['h', 'g', 'f', 'e', 'd', 'c', 'b', 'a']</code></pre>
</div>
</div>
<div id="cell-21" class="cell" data-execution_count="31">
<div class="sourceCode cell-code" id="cb29" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb29-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 주어진 리스트에서 x_i&gt;80 의 조건을 만족하는 원소의 갯수는?</span></span>
<span id="cb29-2">x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">80</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">60</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">80</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">90</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">55</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">85</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">95</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">35</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">70</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">75</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">65</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">95</span>]</span>
<span id="cb29-3"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">sum</span>([i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">80</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> i <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> x])</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="31">
<pre><code>5</code></pre>
</div>
</div>
<p>리스트 컴프리헨션을 이용하여 <img src="https://latex.codecogs.com/png.latex?%20z%20=%20%5Bx_1%5E2%20+%20y_1%5E2,%20...%20,%20x_8%5E2+y_8%5E2%5D%20=%20%5Bx_i%5E2%20+%20y_i%5E2%20:%20%5Ctext%7Bfor%7D%5C%20i%20=%201,2,3,...,8%5D%20"> 와 같은 리스트를 생성하라.</p>
<div id="cell-23" class="cell" data-execution_count="32">
<div class="sourceCode cell-code" id="cb31" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb31-1">x<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">7</span>]</span>
<span id="cb31-2">y<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">7</span>] </span>
<span id="cb31-3"></span>
<span id="cb31-4">[x[i]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">**</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> y[i]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">**</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> i <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">8</span>)]</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="32">
<pre><code>[10, 8, 17, 26, 40, 29, 52, 98]</code></pre>
</div>
</div>
<p>아래와 같은 문자열이 있다고 하자.</p>
<div id="cell-25" class="cell" data-execution_count="33">
<div class="sourceCode cell-code" id="cb33" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb33-1">test_arr <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'ssh-rsa AAAAB3NzaC1yc2EAAAABIwAAAQEAklOUpkDHrfHY17SbrmTIpNLTGK9Tjom/BWDSUGPl+nafzlHDTYW7hdI4yZ5ew18JH4JW9jbhUFrviQzM7xlELEVf4h9lFX5QVkbPppSwg0cda3Pbv7kOdJ/MTyBlWXFCR+HAo3FXRitBqxiX1nKhXpHAZsMciLq8V6RjsNAQwdsdMFvSlVK/7XAt3FaoJoAsncM1Q9x5+3V0Ww68/eIFmb1zuUFljQJKprrX88XypNDvjYNby6vw/Pb0rwert/EnmZ+AW4OZPnTPI89ZPmVMLuayrD2cE86Z/il8b+gw3r3+1nKatmIkjn2so1d01QraTlMqVSsbxNrRFi9wrf+M7Q== schacon@mylaptop.local'</span></span></code></pre></div>
</div>
<p>이 문자열에서 대문자의 수를 count하라.</p>
<div id="cell-27" class="cell" data-execution_count="34">
<div class="sourceCode cell-code" id="cb34" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb34-1"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">sum</span>([i.isupper() <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> i <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> test_arr])</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="34">
<pre><code>155</code></pre>
</div>
</div>
<div id="cell-28" class="cell" data-execution_count="35">
<div class="sourceCode cell-code" id="cb36" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb36-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># string의 .replace()기능과 리스트 컴프리헨션의 응용</span></span>
<span id="cb36-2">lst <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'2022/09/21'</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'2022/10/30'</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'2022/12/25'</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'2023/01/01'</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'2023/01/31'</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'2023/03/20'</span>]</span>
<span id="cb36-3">[a.replace(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'/'</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'-'</span>) <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> a <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> lst]</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="35">
<pre><code>['2022-09-21',
 '2022-10-30',
 '2022-12-25',
 '2023-01-01',
 '2023-01-31',
 '2023-03-20']</code></pre>
</div>
</div>
</section>
</section>
<section id="numpy" class="level2">
<h2 class="anchored" data-anchor-id="numpy">Numpy</h2>
<div id="cell-30" class="cell" data-execution_count="36">
<div class="sourceCode cell-code" id="cb38" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb38-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> numpy <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> np</span></code></pre></div>
</div>
<div id="cell-31" class="cell" data-execution_count="37">
<div class="sourceCode cell-code" id="cb39" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb39-1">np.linspace(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">12</span>)</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="37">
<pre><code>array([0.        , 0.09090909, 0.18181818, 0.27272727, 0.36363636,
       0.45454545, 0.54545455, 0.63636364, 0.72727273, 0.81818182,
       0.90909091, 1.        ])</code></pre>
</div>
</div>
<div id="cell-32" class="cell" data-execution_count="38">
<div class="sourceCode cell-code" id="cb41" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb41-1">np.arange(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span>)</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="38">
<pre><code>array([1, 2, 3, 4, 5])</code></pre>
</div>
</div>
<div id="cell-33" class="cell" data-execution_count="39">
<div class="sourceCode cell-code" id="cb43" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb43-1">a <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.array([<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">11</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">22</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">33</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">44</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">55</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">66</span>])</span>
<span id="cb43-2">a.reshape(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>)</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="39">
<pre><code>array([[11, 22, 33],
       [44, 55, 66]])</code></pre>
</div>
</div>
<div id="cell-34" class="cell" data-execution_count="40">
<div class="sourceCode cell-code" id="cb45" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb45-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># reshape 는 a 자체를 변화시키는 것은 아님.</span></span>
<span id="cb45-2"></span>
<span id="cb45-3">a <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># a는 그대로 있음</span></span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="40">
<pre><code>array([11, 22, 33, 44, 55, 66])</code></pre>
</div>
</div>
<div id="cell-35" class="cell" data-execution_count="41">
<div class="sourceCode cell-code" id="cb47" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb47-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># reshape with -1</span></span>
<span id="cb47-2"></span>
<span id="cb47-3">a.reshape(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>,<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="41">
<pre><code>array([[11, 22, 33],
       [44, 55, 66]])</code></pre>
</div>
</div>
<div id="cell-36" class="cell" data-execution_count="42">
<div class="sourceCode cell-code" id="cb49" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb49-1">a.reshape(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span>,<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="42">
<pre><code>array([[11],
       [22],
       [33],
       [44],
       [55],
       [66]])</code></pre>
</div>
</div>
<div id="cell-37" class="cell" data-execution_count="43">
<div class="sourceCode cell-code" id="cb51" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb51-1">a.reshape(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>) <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 길이가 6인 벡터로 변환</span></span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="43">
<pre><code>array([11, 22, 33, 44, 55, 66])</code></pre>
</div>
</div>
<div id="cell-38" class="cell" data-execution_count="44">
<div class="sourceCode cell-code" id="cb53" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb53-1">np.random.randn(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>) <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 표준정규분포에서 10개를 뽑음</span></span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="44">
<pre><code>array([ 0.10617284,  0.72375906,  0.21798968,  0.19402231, -0.68898998,
       -0.35166964,  0.99093298,  1.21214682, -0.60896544,  0.03254898])</code></pre>
</div>
</div>
<div id="cell-39" class="cell" data-execution_count="45">
<div class="sourceCode cell-code" id="cb55" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb55-1">np.random.rand(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>) <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 0~1사이에서 10개를 뽑음</span></span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="45">
<pre><code>array([0.42891863, 0.34443157, 0.58565357, 0.95396214, 0.88773763,
       0.02981978, 0.40022832, 0.32824551, 0.52936974, 0.52123622])</code></pre>
</div>
</div>
<div id="cell-40" class="cell" data-execution_count="46">
<div class="sourceCode cell-code" id="cb57" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb57-1">np.random.randn(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>).reshape(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>) <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 표준 정규분포에서 4개를 뽑고 (2,2)로 형태변환</span></span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="46">
<pre><code>array([[-0.38160921, -0.94802082],
       [ 0.45375798, -0.71627028]])</code></pre>
</div>
</div>
<section id="행렬-관련-기능" class="level3">
<h3 class="anchored" data-anchor-id="행렬-관련-기능">행렬 관련 기능</h3>
<div id="cell-42" class="cell" data-execution_count="47">
<div class="sourceCode cell-code" id="cb59" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb59-1">A <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.arange(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>).reshape(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)</span>
<span id="cb59-2">A</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="47">
<pre><code>array([[0, 1],
       [2, 3]])</code></pre>
</div>
</div>
<div id="cell-43" class="cell" data-execution_count="48">
<div class="sourceCode cell-code" id="cb61" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb61-1">A.T <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># .T는 전치행렬을 구해줌</span></span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="48">
<pre><code>array([[0, 2],
       [1, 3]])</code></pre>
</div>
</div>
<div id="cell-44" class="cell" data-execution_count="49">
<div class="sourceCode cell-code" id="cb63" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb63-1">np.linalg.inv(A) <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># np.linalg.inv 는 역행렬을 구해줌</span></span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="49">
<pre><code>array([[-1.5,  0.5],
       [ 1. ,  0. ]])</code></pre>
</div>
</div>
<div id="cell-45" class="cell" data-execution_count="50">
<div class="sourceCode cell-code" id="cb65" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb65-1">A <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">@</span> np.linalg.inv(A) <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># @는 행렬곱을 수행</span></span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="50">
<pre><code>array([[1., 0.],
       [0., 1.]])</code></pre>
</div>
</div>
</section>
<section id="numpy-axis의-이해" class="level3">
<h3 class="anchored" data-anchor-id="numpy-axis의-이해">Numpy: axis의 이해</h3>
<ul>
<li><p>두번째 차원을 바꾸고 싶다 -&gt; 두번째 축을 바꾸고 싶다 -&gt; axis = 1 (파이썬은 0부터 시작)</p>
<p>값이 바뀌는 부분이 axis</p></li>
</ul>
<p>ex)</p>
<pre><code>a.shape, b.shape, np.concatenate([a,b],axis=1).shape


((2, 3, 4), (2, 3, 4), (2, 6, 4))</code></pre>
<p>ex)</p>
<div id="cell-48" class="cell" data-execution_count="51">
<div class="sourceCode cell-code" id="cb68" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb68-1">a<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>np.array(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span>)).reshape(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>)</span>
<span id="cb68-2">a, a.shape</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="51">
<pre><code>(array([[0, 1, 2],
        [3, 4, 5]]),
 (2, 3))</code></pre>
</div>
</div>
<div id="cell-49" class="cell" data-execution_count="52">
<div class="sourceCode cell-code" id="cb70" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb70-1">a.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">sum</span>(axis<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>), a.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">sum</span>(axis<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>).shape <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 첫번째 축이 삭제됨</span></span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="52">
<pre><code>(array([3, 5, 7]), (3,))</code></pre>
</div>
</div>
<div id="cell-50" class="cell" data-execution_count="53">
<div class="sourceCode cell-code" id="cb72" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb72-1">a.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">sum</span>(axis<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>), a.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">sum</span>(axis<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>).shape <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 두번째 축이 삭제됨</span></span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="53">
<pre><code>(array([ 3, 12]), (2,))</code></pre>
</div>
</div>
</section>
</section>
<section id="pandas" class="level2">
<h2 class="anchored" data-anchor-id="pandas">Pandas</h2>
<div id="cell-52" class="cell" data-execution_count="54">
<div class="sourceCode cell-code" id="cb74" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb74-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> pandas <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> pd</span></code></pre></div>
</div>
<section id="행과-열의-선택" class="level3">
<h3 class="anchored" data-anchor-id="행과-열의-선택">행과 열의 선택</h3>
<div id="cell-54" class="cell" data-execution_count="55">
<div class="sourceCode cell-code" id="cb75" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb75-1">np.random.seed(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">43052</span>)</span>
<span id="cb75-2">att <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.random.choice(np.arange(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">21</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">20</span>)</span>
<span id="cb75-3">rep <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.random.choice(np.arange(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">21</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">20</span>)</span>
<span id="cb75-4">mid <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.random.choice(np.arange(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">21</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">20</span>)</span>
<span id="cb75-5">fin <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.random.choice(np.arange(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">21</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">20</span>)</span>
<span id="cb75-6">student_id <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'2022-12'</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>(s) <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> s <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> np.random.choice(np.arange(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">300</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">501</span>),<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">20</span>,replace<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">False</span>)]</span>
<span id="cb75-7"></span>
<span id="cb75-8">df2 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pd.DataFrame({<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'id'</span>:student_id,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'att'</span>:att,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'rep'</span>:rep,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'mid'</span>:mid,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'fin'</span>:fin})</span>
<span id="cb75-9">df2.head()</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="55">
<div>


<table class="dataframe table table-sm table-striped small" data-quarto-postprocess="true" data-border="1">
<thead>
<tr class="header">
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th">id</th>
<th data-quarto-table-cell-role="th">att</th>
<th data-quarto-table-cell-role="th">rep</th>
<th data-quarto-table-cell-role="th">mid</th>
<th data-quarto-table-cell-role="th">fin</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td data-quarto-table-cell-role="th">0</td>
<td>2022-12380</td>
<td>65</td>
<td>55</td>
<td>50</td>
<td>40</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">1</td>
<td>2022-12370</td>
<td>95</td>
<td>100</td>
<td>50</td>
<td>80</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">2</td>
<td>2022-12363</td>
<td>65</td>
<td>90</td>
<td>60</td>
<td>30</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">3</td>
<td>2022-12488</td>
<td>55</td>
<td>80</td>
<td>75</td>
<td>80</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">4</td>
<td>2022-12312</td>
<td>80</td>
<td>30</td>
<td>30</td>
<td>100</td>
</tr>
</tbody>
</table>

</div>
</div>
</div>
<p>가장 안전한 코드</p>
<p><code>df.loc[:,:]</code></p>
<p>상황: 하나의 col을 뽑으려 할 때 좋은 코드</p>
<p><code>df.att</code> or <code>df['att']</code></p>
<p>상황: row 슬라이싱 할 때 좋은 코드(★★★)</p>
<p><code>df[:5]</code></p>
<p>위의 상황 이외에는 <code>df.loc[:,:]</code>를 사용하는 것이 유리하다.</p>
<p>상황: column 슬라이싱 할때</p>
<p><code>df.loc[:, 'att':'mid']</code></p>
<p>상황: row + column 슬라이싱하는 가장 좋은 코드</p>
<p><code>df.loc[0:5, 'att':'mid']</code></p>
<p>상황: 조건에 맞는 col을 뽑기에 가장 좋은 코드</p>
<p><code>df.loc[:, [len(col_name)&gt;2 for col_name in df.columns]]</code></p>
<p>상황: 조건에 맞는 row, col을 뽑기에 가장 좋은 코드</p>
<p><code>df.loc[df.att&lt;60, [len(col_name)&gt;2 for col_name in df.columns]]</code></p>
<ul>
<li>여러 열을 뽑을때에는 리스트로 묶어주어야함. ex) <code>df.loc[:, ['B','C']]</code></li>
</ul>
</section>
<section id="lambda" class="level3">
<h3 class="anchored" data-anchor-id="lambda">lambda</h3>
<p>람다표현식(lambda expression) 자체가 하나의 오브젝트임.</p>
<div id="cell-60" class="cell" data-execution_count="56">
<div class="sourceCode cell-code" id="cb76" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb76-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">lambda</span> x: (x<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">**</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 실행되는 순간 메모리 상에 함수 오브젝트가 저장됨</span></span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="56">
<pre><code>&lt;function __main__.&lt;lambda&gt;(x)&gt;</code></pre>
</div>
</div>
<div id="cell-61" class="cell" data-execution_count="57">
<div class="sourceCode cell-code" id="cb78" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb78-1">(<span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">lambda</span> x: (x<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">**</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>) <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 입력 5 -&gt; (5-2)^2 = 9</span></span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="57">
<pre><code>9</code></pre>
</div>
</div>
<p>람다 표현식에 이름을 줄 수 있음</p>
<div id="cell-63" class="cell" data-execution_count="58">
<div class="sourceCode cell-code" id="cb80" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb80-1">f <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">lambda</span> x: (x<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">**</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span></span></code></pre></div>
</div>
<div id="cell-64" class="cell" data-execution_count="59">
<div class="sourceCode cell-code" id="cb81" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb81-1">f(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>), f(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>), f(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span>), f(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="59">
<pre><code>(0, 4, 16, 16)</code></pre>
</div>
</div>
<p>위의 코드는 아래와 같다.</p>
<div id="cell-66" class="cell" data-execution_count="60">
<div class="sourceCode cell-code" id="cb83" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb83-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> f(x):</span>
<span id="cb83-2">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> (x<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">**</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span></span>
<span id="cb83-3">f(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>), f(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>), f(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span>), f(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="60">
<pre><code>(0, 4, 16, 16)</code></pre>
</div>
</div>
<p>조건부 출력</p>
<div id="cell-68" class="cell" data-execution_count="61">
<div class="sourceCode cell-code" id="cb85" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb85-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># x,y가 입력 / x&gt;y 일때만 x를 리턴하고 그렇지 않으면 y를 리턴. 즉 큰 값을 리턴하라는 소리</span></span>
<span id="cb85-2">f <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">lambda</span> x,y: x <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> x<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span>y <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">else</span> y</span>
<span id="cb85-3">f(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">20</span>)</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="61">
<pre><code>20</code></pre>
</div>
</div>
</section>
<section id="map" class="level3">
<h3 class="anchored" data-anchor-id="map">map</h3>
<p>list(map(함수, input))</p>
<div id="cell-71" class="cell" data-execution_count="62">
<div class="sourceCode cell-code" id="cb87" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb87-1">x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>] </span>
<span id="cb87-2">f <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">lambda</span> x: x<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb87-3">y <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">list</span>(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">map</span>(f,x))</span>
<span id="cb87-4">x,y</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="62">
<pre><code>([1, 2, 3], [2, 3, 4])</code></pre>
</div>
</div>
</section>
<section id="s.apply변환함수" class="level3">
<h3 class="anchored" data-anchor-id="s.apply변환함수">s.apply(변환함수)</h3>
<div id="cell-73" class="cell" data-execution_count="63">
<div class="sourceCode cell-code" id="cb89" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb89-1">df <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pd.read_csv(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'https://raw.githubusercontent.com/guebin/DV2022/master/posts/FIFA23_official_data.csv'</span>)</span>
<span id="cb89-2">df.Height.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">apply</span>(<span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">lambda</span> x: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>(x[:<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>]))</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="63">
<pre><code>0        189
1        179
2        172
3        181
4        172
        ... 
17655    190
17656    195
17657    190
17658    187
17659    186
Name: Height, Length: 17660, dtype: int64</code></pre>
</div>
</div>


</section>
</section>

 ]]></description>
  <guid>https://star77sa.github.io/posts/Python/python_1.html</guid>
  <pubDate>Sun, 21 Jan 2024 15:00:00 GMT</pubDate>
</item>
<item>
  <title>성능 평가 지표(회귀모델, 분류모델)</title>
  <dc:creator>고경수 </dc:creator>
  <link>https://star77sa.github.io/posts/etc/모델_성능평가지표_정리.html</link>
  <description><![CDATA[ 





<section id="포스팅-예정" class="level1">



</section>

 ]]></description>
  <guid>https://star77sa.github.io/posts/etc/모델_성능평가지표_정리.html</guid>
  <pubDate>Thu, 18 Jan 2024 15:00:00 GMT</pubDate>
</item>
<item>
  <title>[논문 리뷰] Machine learning driven smart electric power system: Current trends and new perspectives(2020)</title>
  <dc:creator>고경수 </dc:creator>
  <link>https://star77sa.github.io/posts/Paper/smartgrid1.html</link>
  <description><![CDATA[ 





<hr>
<p><a href="https://www.sciencedirect.com/science/article/pii/S0306261920307492">Machine learning driven smart electric power system: Current trends and new perspectives (2020)</a></p>
<hr>
<section id="abstract" class="level1">
<h1>Abstract</h1>
<ul>
<li><p>이 연구는 다양한 측면으로부터 스마트 그리드의 기술적 문제에 성공적으로 접근하기 위해 머신러닝 기술 사용의 증가하는 관심과 빠른 확장에 대해 쓰여졌다.</p></li>
<li><p>현재의 전력 시스템은 보다 능동적이고 유연하며 지능적인 스마트 그리드로 빠르게 전환되고 있으며 이는 많은 영역에서 도전을 야기한다. (다양하게 분배된 재사용가능한 에너지들의 통합, 사이버 보안, 수요측면관리, 시스템 계획 및 운영에 관한 의사결정)</p></li>
<li><p>스마트그리드에서 고급 기능의 실현은 기본적인 정보 통신 인프라와 다양한 소스(smart meter, phasor measurement units, and various forms of sensors)에서 생성된 방대한 양의 데이터를 효율적으로 처리하는 데 크게 의존한다.</p></li>
<li><p>몇몇 이슈는 여전히 열리고 더 연구할 가치가 있는 채로 남겨졌다. (high-performance data processing and analysis for intelligent decision-making in large-scale complex multi-energy systems, lightweight machine learning-based solutions, and so forth)</p>
<p>더하여 진보된 컴퓨팅, 통신기술(edge computing, ubiquitous internet of things and 5G wireless networks, in the smart grid are also highlighted.)을 활용하는 미래관점에서 스마트그리드는 주목받을 것이다.</p></li>
<li><p>머신러닝은 미래 스마트 전력 시스템을 이끄는 주요한 방법 중 하나가 될 것이다.</p></li>
</ul>
</section>
<section id="conclusion" class="level1">
<h1>6. Conclusion</h1>
<ul>
<li><p>스마트 그리드 - 전통적 power grid와 반대로 더 효율적이고 데이터에 의존하고 사용자 중심적이다.</p></li>
<li><p>인공지능 맥락에서 머신러닝 기술은 스마트그리드의 다양한 측면의 단순하지 않은 기술적 도전에 접근하기 위한 효율적이고 진보된 도구로 고려된다.</p>
<p>머신러닝 툴 사용의 빠른 확장에도 불구하고 몇몇 문제들은 남아있고 더욱 연구할 가치가 있다.</p></li>
<li><p>200개가 넘는 2014~2019 high impact journal들을 광범위하게 리뷰하고 보고하였다. 간단한 신경망부터 세련된 강화학습과 딥러닝 방법도 관측되었다. 더 구체적으로 55개가 machine learning based forecasting 문제, 23개가 machine learning based fault analysis, 42개가 machine leanring driven DSM 문제, 35개가 cyberspace security issues였다.</p></li>
</ul>
</section>
<section id="introduction" class="level1">
<h1>1. Introduction</h1>
<ul>
<li><p>AC(Alternating current), DC(Direct current) system</p></li>
<li><p>conventional energy system → more efficient next-generation smart grid system.</p></li>
<li><p><strong>conventional energy system</strong></p>
<ul>
<li>few centralized and large power generation sources</li>
<li>mainly hydropower or fossil fuel based power generation system to the consumers via a distribution system</li>
<li>uni-directional(단방향) power and communication flow ⇒ passive</li>
</ul></li>
<li><p><strong>smart grid</strong></p>
<ul>
<li>integration and contribution of every distributed and renewable energy resource</li>
<li>two-way power and information flow ⇒ active —</li>
<li>bi-directional flow of power and communication은 reliability, security, efficiency of power systems를 향상시킬 수 있다.</li>
</ul></li>
<li><p>스마트 그리드는 더 좋은 energy efficiency, cost-effectiveness, controlled <img src="https://latex.codecogs.com/png.latex?CO_2"> emission, reduced cost, improved utility로 인해 미래의 전력망으로 일컬어지고 있다.</p></li>
<li><p>스마트 그리드는 conventional power grid와 비교하여 넓은 범위의 작업들을 수행한다. 많은 수의 기기 연결은 에너지 관련 작업을 특정 방식으로 수행하기 위한 명령과 정보 교환을 가능케 한다.</p></li>
<li><p>grid infrastructure로의 IoT 기기들의 통합은 미래 스마트그리드로 향한 첫걸음이다.</p>
<ul>
<li>Smart meter는 실시간에서 에너지 소비를 측정할 수 있을 뿐만 아니라 양방향 통신을 통해 고객이 전력 유틸리티와 상호작용하고 advanced demand-side management operations를 수행할 수 있도록 한다.</li>
<li>스마트그리드에서 IoT의 통합은 스마트그리드들의 관리에 추가적인 challenge들을 가져온다. 예를들어 the timely delivery of critical operational information, the efficient process of the vat amount of field data, and cyberspace security issues. 이러한 문제들은 적절한 접근 및 기술 사용이 필요 e.g., the phasor measurement unit placement, advanced analytical tools, and machine learning-based solutions.</li>
</ul></li>
<li><p>This paradigm-shift(conventional grid → smart grid) has equipped the power grid with many distributed generation(DG) systems, such as photovoltic(PV), wind energy, and electric vehicles(EV). 다시말해 스마트그리드는 processes, technologies, and distributed and renewable generation systems that makes the conventional power grid more intelligent and efficient의 통합이다.</p></li>
<li><p>다양한 DGs의 통합은 수많은 challenge들을 소개한다. 예를들어 load forecast, fault and failure analysis, demand-side management, non-intrusive load monitoring(NILM), cyberspace security, electricity theft detection, and islanding detection among others.</p></li>
<li><p>최근 몇년간 스마트 그리드에 독보적인 문제에 접근하는 머신러닝 기반 기술의 사용이 관측되는 트렌드이다.</p></li>
<li><p>이 연구는 스마트 그리드에서 머신러닝 기술의 응용의 최근 진보 overview와 다양한 기술들의 한계점에 대해 토론하는것에 더해 future practice을 위한 가능한 솔루션에 초점을 맞춘다.</p></li>
</ul>
</section>
<section id="an-overview-of-machine-learning" class="level1">
<h1>2. An overview of machine learning</h1>
<ul>
<li><p>특히 IoT를 포함한 고급 정보 및 통신 기술을 전력 그리드 인프라에 통합하는 것은 스마트 그리드로 나아가는 주요 단계 중 하나이다.</p></li>
<li><p>스마트 그리드의 다양한 응용 분야에서 발생하는 challenge에 대처하기 위해 기계 학습 및 딥 러닝 기반 솔루션을 탐색하는 데 많은 연구 노력이 기울여졌다.</p></li>
<li><p>머신러닝 기술은 넓게 4가지 카테고리로 분류된다.</p>
<ol type="1">
<li>Supervised learning : 학습을 위해 인풋과 아웃풋 사이에 맵핑이 되어있고 많은 트레이닝 샘플들 인풋과 아웃풋 페어에 라벨이 주어진다.</li>
<li>Unsupervised learning : 라벨이 없을 뿐만 아니라 분류도 되어있지 않다. similarity 나 difference를 기준으로 그룹핑한다. supervised보다 복잡한 task. 흔한 방식은 cluster analysis이며 이는 숨겨진 패턴 또는 데이터를 그룹핑할때 EDA를 사용한다.</li>
<li>Reinforcement learning(RL) : <strong>agent</strong>가 환경과 상호작용 하고 action에 응답하여 받은 자극에 기반하여 액션을 수정한다. RL은 input/output 페어의 라벨을 요구하지 않고 환경에서 액션에 응답하여 에이전트에 reward or penalty를 받는다는점에서 supervised learning과 다르다. RL는 행동을 자동적으로 결정하는것이 가능하다. 인간이나 동물의 행동과 가장 유사한 방법</li>
<li>Ensemble methods : 몇몇 머신러닝 알고리즘을 사용하여 한개의 알고리즘을 쓸때보다 성능을 향상시키기 위해 만든다. 싱글보다 일반화된 성능을 가짐.</li>
</ol></li>
<li><p>전통적인 계산 기술의 부족함과 한계는 다양한 스마트 그리드 도전 과제에 대한 대응으로 기계 학습 기술을 사용하는 동기를 제시한다.</p></li>
<li><p><strong>Limitations of existing solutions</strong></p>
<ul>
<li>Unable to handle large amounts of data</li>
<li>Lacking robustness against uncertainty</li>
<li>Lacking better optimization in the presence of constraints</li>
<li>Lacking adaptive and autonomous operations</li>
<li>Lacking intelligent decision making</li>
<li>Lacking real-time processing</li>
<li>Lacking complex systems modeling capability</li>
<li>Unable to handle non-linear systems</li>
</ul></li>
<li><p><strong>Benefits of ML techniques</strong></p>
<ul>
<li>Mostly data-driven</li>
<li>Feature selection and feature extraction ability</li>
<li>Autonomous, adaptive, and intelligent operations and decision making</li>
<li>Can perform real-time and/or near realtime operations</li>
<li>Can effectively deal with non-linear systems</li>
<li>Complex system modeling</li>
</ul></li>
</ul>
</section>
<section id="machine-learning-applications-in-smart-grid" class="level1">
<h1>3. Machine learning applications in smart grid</h1>
<section id="forecasting-in-smart-grid" class="level2">
<h2 class="anchored" data-anchor-id="forecasting-in-smart-grid"><em>3.1. Forecasting in smart grid</em></h2>
<section id="electric-load-and-price-forecasting" class="level3">
<h3 class="anchored" data-anchor-id="electric-load-and-price-forecasting"><em>3.1.1. Electric load and price forecasting</em></h3>
<ul>
<li><p>Electric load forecasting is divided into three categories based on the forecasting horizons.</p>
<ol type="1">
<li>Short-term Load Forecasting</li>
</ol>
<ul>
<li><p>short : generally involves load forecasting of a few minutes up to a few days</p></li>
<li><p>…</p>
<p><img src="https://star77sa.github.io/posts/Paper/smartgrid1_files/figure-html/cell-12-1-image.png" class="img-fluid"></p></li>
</ul>
<ol start="2" type="1">
<li>General (Medium-term and long-term) Load Forecasting</li>
</ol>
<ul>
<li><p>medium : forecast of a few days up to a few months</p></li>
<li><p>long : forecast of a few months up to a year</p></li>
<li><p>…</p>
<p><img src="https://star77sa.github.io/posts/Paper/smartgrid1_files/figure-html/cell-12-1-image.png" class="img-fluid"></p></li>
</ul>
<ol start="3" type="1">
<li>Electricity Price Forecast</li>
</ol>
<ul>
<li><p>…</p>
<p><img src="https://star77sa.github.io/posts/Paper/smartgrid1_files/figure-html/cell-12-1-image.png" class="img-fluid"></p></li>
</ul></li>
</ul>
</section>
<section id="renewable-power-generation-prediction" class="level3">
<h3 class="anchored" data-anchor-id="renewable-power-generation-prediction"><em>3.1.2. Renewable power generation prediction</em></h3>
<ul>
<li><p>The integration of renewable energy systems poses many challenges due to their variable generation patterns caused by their <strong>geographical location, weather, and other factors</strong> which can impact the <strong>power quality and stability</strong>.</p></li>
<li><p>…</p>
<p><img src="https://star77sa.github.io/posts/Paper/smartgrid1_files/figure-html/cell-13-1-image.png" class="img-fluid"></p></li>
</ul>
</section>
</section>
<section id="machine-learning-in-fault-and-failure-analysis" class="level2">
<h2 class="anchored" data-anchor-id="machine-learning-in-fault-and-failure-analysis"><em>3.2. Machine learning in fault and failure analysis</em></h2>
<p><img src="https://star77sa.github.io/posts/Paper/smartgrid1_files/figure-html/cell-14-1-image.png" class="img-fluid"></p>
</section>
<section id="machine-learning-in-demand-side-management" class="level2">
<h2 class="anchored" data-anchor-id="machine-learning-in-demand-side-management"><em>3.3. Machine learning in demand-side management</em></h2>
<p><img src="https://star77sa.github.io/posts/Paper/smartgrid1_files/figure-html/cell-15-1-image.png" class="img-fluid"></p>
</section>
<section id="machine-learning-in-cyberspace-security" class="level2">
<h2 class="anchored" data-anchor-id="machine-learning-in-cyberspace-security"><em>3.4. Machine learning in cyberspace security</em></h2>
<p><img src="https://star77sa.github.io/posts/Paper/smartgrid1_files/figure-html/cell-16-1-image.png" class="img-fluid"></p>
</section>
<section id="others" class="level2">
<h2 class="anchored" data-anchor-id="others"><em>3.5. Others</em></h2>
<ul>
<li>…</li>
</ul>
</section>
</section>
<section id="discussion-and-remarks" class="level1">
<h1>4. Discussion and remarks</h1>
<section id="observations" class="level2">
<h2 class="anchored" data-anchor-id="observations"><em>4.1. Observations</em></h2>
<ul>
<li>광범위한 문헌 조사는 다양한 smart grid challenges에 접근하는 머신러닝, 딥러닝 기법의 사용 증가를 보여준다.</li>
</ul>
<p><img src="https://star77sa.github.io/posts/Paper/smartgrid1_files/figure-html/cell-19-1-image.png" class="img-fluid"></p>
<ul>
<li><p>Based on the comprehensive review of the literature, a collection of observations and insights are summarized as follows:</p>
<ul>
<li><p><strong>Electric Load Forecasting</strong> : 상대적으로 성숙한 분야. 머신러닝 기법이 중요한 역할을 하였다. 기상 데이터의 활용 및 다양한 지역의 계층적 예측을 활용하였다. 게다가, 기계학습 기반 단기 예측은 수요를 충족시키고 간헐적이고 재생 가능한 분산 발전 예측에도 크게 기여하였다.</p>
<p>유명한 기계학습 기반 electric load forecast algorithms는 supervised neural networks, LSTM RNN, and Random forest among others를 포함한다</p></li>
<li><p><strong>Fault diagnosis and detection :</strong> 머신러닝 기법은 고장 감지 및 진단에서 뛰어난 성과를 보인다. 이는 고장에 대한 깊은 이해나 전문 지식이 필요하지 않고, 데이터의 패턴에 민감하며, 필수적인 변수가 누락되어도 효율적으로 동작할 수 있다는 특성 때문이다. 반면에 베이지안 네트워크와 같은 지식 주도 방법(Knowledge-Driven Approach (↔︎ Data Driven Approach))은 도메인 및 전문 지식의 도입으로 불완전한 정보에 대한 문제를 해결할 수 있다.</p></li>
<li><p><strong>Load management / demand-side management(DSM)</strong> : DSM frameworks or demand response programs are mainly based on classification where machine learning tools such as SVM, MLP, and RNN have shown promising performance.</p></li>
<li><p><strong>NILM :</strong> use of deep learning and advanced multi-label classification methods such as ML-KNN and SVM where the need of prior feature extraction is diminished due to the automatic feature extraction ability of such methods, which was one of the challanges for the classic machine learning techniques.</p></li>
<li><p><strong>Cyber-attack detection</strong> : 머신러닝 기반 방법은 flexibility towards scalability 때문에 높은 분류 정확도를 보인다. + dominance of supervised learning methods in attack detection.</p></li>
<li><p><strong>Energy and economic dispatch :</strong> 대부분의 문헌들은 multi-agent theory를 사용. 이는 정확한 cost function의 수학적 모델을 요구하는 반면 최근의 몇 연구에서는 이 문제를 해결하기 위해 강화학습 알고리즘과 같은 머신러닝을 사용하는 경향이 있다.</p></li>
</ul></li>
<li><p>기존의 그리드에서 스마트 그리드로 전환하고 기존의 생산 시스템을 탈탄소화 하기 위해서는 현재의 전력망에 친환경적이고 재사용가능한 생산시스템의 더 많이 침투해야한다. 이러한 시스템의 침투는 최적의 전력 흐름과 수급 균형을 유지하면서 효과적이고 효율적인 계획 전략이 필요하며 이는 SVM, Q-learning, Decision trees 같은 기계 학습 도구가 효과적으로 사용될 수 있는 복잡한 비선형 문제로 모델링될 수 있다.</p>
<p><img src="https://star77sa.github.io/posts/Paper/smartgrid1_files/figure-html/cell-20-1-image.png" class="img-fluid"></p></li>
<li><p>다양한 머신러닝 알고리즘(SVM, LSTM, DBN and CNN)이 많은 스마트 그리드 문제 해결에 사용되곤 한다.</p>
<p>Neural network가 가장 많이 사용되고 높은 정확도를 보이며 non-linear mapping ability.</p>
<p>Deep learning 은 forecasting과 cyberspace security에서 인기있는 기술이다.</p>
<p>LSTM과 같은 RNN은 forecasting문제에서 사용이 증가하고있다.</p>
<p><img src="https://star77sa.github.io/posts/Paper/smartgrid1_files/figure-html/cell-21-1-image.png" class="img-fluid"></p></li>
</ul>
</section>
<section id="technical-challenges" class="level2">
<h2 class="anchored" data-anchor-id="technical-challenges"><em>4.2. Technical challenges</em></h2>
<p>다양한 스마트 그리드 응용 분야에서 기계 학습 알고리즘 및 기술의 구현을 위한 몇 가지 도전요소와 권장 사항:</p>
<ul>
<li>Smart Grid Data Preprocessing:
<ul>
<li><p>데이터 전처리는 일반적으로 데이터 통합, 데이터 정제, 데이터 변환 세 가지 주요 단계로 이루어짐.</p></li>
<li><p>스마트 그리드의 데이터 전처리 사이클은 다양한 데이터 소스로 인해 도전적이다.</p>
<p>주요 데이터 소스에는</p>
<ol type="1">
<li><p>real and reactive powers, DR capacity, voltage 등의 operational data</p></li>
<li><p>전력 품질 및 신뢰성과 관련된 non-operational data</p></li>
<li><p>하루 중 시간, 평균, 최대 수요 값, 전력 사용과 관련된 스마트 미터 데이터</p></li>
<li><p>voltage loss, fault detection event, security breach event를 포함하는 스마트 그리드 event data</p></li>
<li><p>다른 유형의 데이터를 조직하고 해석하는 데 사용되는 메타데이터</p></li>
</ol></li>
<li><p>스마트 그리드의 데이터 전처리는 다양한 유형의 데이터 소스와 이에 따른 데이터로 인해 도전적이다.</p></li>
</ul></li>
<li>Data Availability:
<ul>
<li>load forecasting 문제에서의 기계 학습 기반 모델은 효율적인 예측 결과를 보이며 이러한 모델은 전통적인 방법보다 더 유연하다. 그러나 기계학습 기반의 예측 모델은 대량의 대표적인(representative) 데이터에 크게 의존하며, 이러한 데이터 없이는 모델이 일반성을 가지지 못한다. 또한 예측 시계열에 대한 예측 기간에 상관없이 정확한 예측을 수행하고 다양한 제약 조건에 대한 트레이드오프를 하지 않고도 작동할 수 있는 표준적이고 견고한(robust) 예측 방법이 필요하다.</li>
</ul></li>
<li>Load Transfer Detection(부하 이전 감지?):
<ul>
<li>대부분의 문헌 검토에서는 강조되지 않았음. 다만 정확하고 효율적인 예측을 달성하기 위한 주요 도전 중 하나이다.</li>
<li>이 도전은 utility or distribution 운영자가 주로 유지보수 또는 신뢰성 이유로 계절적, 임시 또는 영구적인 기준으로 다른 회로로 부하를 이전할 때 발생한다. 기계 학습 방법은 부하 예측에서 이러한 도전을 효과적으로 식별하고 해결하는 데 중요한 역할을 할 수 있다.</li>
</ul></li>
<li>Extrapolation of Faults:
<ul>
<li>fault diagnosis와 fault detection을 위한 데이터 기반 모델은 유망한 결과를 보여주었지만 이러한 기계학습 모델은 훈련 데이터의 경계를 넘어 추론할 수 없다. 따라서 베이지안 방법, 퍼지 기반 방법과 같은 지식 기반 방법과 데이터 기반 기계학습 기반 방법을 결합한 하이브리드 접근 방식은 상기한 문제를 효과적으로 해결할 수 있다.</li>
</ul></li>
<li>Machine Learning-based Planning Framework:
<ul>
<li>스마트 그리드 기획 및 운영 문제에 대한 기계학습을 통한 추가적인 연구 가능성이 여전히 많이 남아있다.</li>
</ul></li>
<li>Deep Learning-based Multi-label Classification Approaches:
<ul>
<li><p>NILM 문제에서 표준 딥 러닝 방법(SAE 및 DBN과 같은)의 한계로 인해 딥 러닝 기반 다중 레이블 분류의 탐색과 개발이 필요하다.</p>
<p>로지스틱 회귀 및 소프트맥스가 훈련에 자주 사용되는 경우, 로지스틱 회귀 및 소프트맥스 기반의 딥 러닝 모델 훈련은 단일 클래스로 이어진다. 따라서 다른 혁신적인 딥 러닝 기반 다중 레이블 분류 접근 방식은 NILM 문제를 효과적으로 해결할 수 있다.</p>
<p><code>=&gt; 다중 레이블 분류와 다중 클래스 분류(다중분류)는 다르다. 다중분류는 각 샘플이 하나의 클래스에만 속할 수 있는 분류 문제를 의미. 다중 레이블 분류는 각 샘플이 여러 개의 클래스에 속할 수 있는 분류 문제를 의미한다. 즉, 각 샘플은 여러 개의 레이블을 가질 수 있으며 각 레이블은 클래스를 나타낸다.</code></p></li>
</ul></li>
<li>Post-Attack Resilience Frameworks(사이버 공간에서의 공격 후 회복 프레임 워크):
<ul>
<li>사이버 공간 보안과 관련된 대부분의 문헌은 기계학습 기반의 공격 탐지 및 예방 메커니즘에 중점을 두지만, 공격 이후의 상황에 중점을 둔 출판물은 소수이다. 따라서 사이버 위협의 탐지 및 예방뿐만 아니라 완화에 중점을 둔 보안 알고리즘이 필요하다.</li>
</ul></li>
<li>Lightweight Machine Learning Solutions:
<ul>
<li>미래의 IoT 기반 스마트 디바이스에 구현하기 위해 빠르면서도 계산 비용이 적은 기계 학습 및 딥 러닝 알고리즘이 필요하다. 이는 계산 요구 사항이 제한된 스마트 디바이스에서 사용될 것이다.</li>
</ul></li>
<li>Smart Grid Reliability Requirements:
<ul>
<li><p>스마트 그리드에 대규모로 통합되는 재생 가능한 power sources, 특히 풍력 및 태양광 발전 시스템은</p>
<ol type="1">
<li><p>일반적인 예측 기간에서의 큰 예측 오류,</p></li>
<li><p>대규모 설치로 인한 송전 혼잡,</p></li>
<li><p>전압 및 주파수 안정성과 관련된 전력 품질 문제,</p></li>
<li><p>지리적으로 분산된 자원으로 인한 관련 전력 분배 시스템의 challenge</p></li>
</ol>
<p>로 스마트 그리드의 신뢰성 요구 사항을 강조한다. 이러한 시스템의 불확실성 및 신뢰성 요구 사항은 스마트 그리드에서 기계 학습 기반 기술을 다양한 측면에서 활용하는 데 명백한 challenge를 제공한다. 예를 들면 효율적인 운영 상태 모니터링 및 분석, 정확한 상태 예측 및 이상 징후 감지, 그리고 합리적인 의사 결정 등이 있다.</p></li>
</ul></li>
</ul>
</section>
</section>
<section id="new-perspectives" class="level1">
<h1>5. New perspectives</h1>
<ul>
<li>컴퓨터 분야에서의 기술적 발전과 고급 컴퓨팅 시스템의 가용성은 복잡하고 계산 비용이 많이 드는 알고리즘을 활용하여 다양한 과학 및 공학적 도전에 효과적인 해결책을 제공하고 있다.</li>
</ul>
<section id="new-perspectives-in-smart-energy-systems-application-domain" class="level2">
<h2 class="anchored" data-anchor-id="new-perspectives-in-smart-energy-systems-application-domain"><em>5.1. New perspectives in smart energy systems application domain</em></h2>
<ul>
<li><p>스마트 그리드는 다양한 성격의 에너지 원천과 소비자들 간의 복잡한 네트워크로, 여기에서 기계 학습 기술이 유망한 기여를 보여주고 있다.</p></li>
<li><p>기계 학습 모델의 적용은 에너지 시스템에서 운영 계획, 소비자 수요 관리, 재생 에너지 시스템 통합 등에 유용</p></li>
<li><p>단위 할당 및 에너지 경제 배치와 같은 전력 시장 거래 운영이 기계 학습 도구를 사용하여 더 깊이 탐구될 수 있다</p></li>
<li><p>DSM은 스마트 그리드의 핵심 촉진 요소 중 하나로, 소비자들이 유틸리티 자체 외에도 전력 관리에 적극적으로 참여할 수 있는 환경을 제공</p></li>
<li><p>DR에 대한 기존 연구가 이미 수행되었음에도 불구하고, 기계 학습이 소비자 행동 예측을 통해 전력 공급 관리를 더욱 향상시킬 수 있다는 전망</p></li>
<li><p>소비자 행동 및 전력 소비 패턴을 학습함으로써 부하 예측, 전기 요금 개발, 그리고 차량-그리드 및 차량-가정 모델, 전기 자동차 충전 일정에 큰 기여를 할 수 있습니다</p></li>
</ul>
</section>
<section id="new-perspectives-in-emerging-technologies-integration-with-smart-energy-systems" class="level2">
<h2 class="anchored" data-anchor-id="new-perspectives-in-emerging-technologies-integration-with-smart-energy-systems"><em>5.2. New perspectives in emerging technologies integration with smart energy systems</em></h2>
<ul>
<li><p>인공 지능 및 컴퓨팅 기술의 발전에도 불구하고, 스마트 디바이스의 급증, 복잡한 기계 학습 및 딥 러닝 알고리즘의 진화, 그리고 이에 따른 컴퓨팅 수요의 증가로 인해 필요한 컴퓨팅 리소스의 즉각적인 가용성이 요구된다.</p></li>
<li><p>기존의 스마트 그리드 네트워크는 주로 IoT 및 클라우드 기반 네트워크로, 데이터 처리 및 저장은 일반적으로 클라우드 서버에서 수행된다. 그러나 클라우드 컴퓨팅 기반 시스템은 효율적인 컴퓨팅 및 저장 리소스를 제공하며 복잡한 계산 부담을 완화하는 데 도움이 될 수 있지만, 클라우드 컴퓨팅은 고지연성과 실시간 응용 프로그램에 제약 사항이 있으며 대역폭 이용도가 증가하는 등의 한계가 있다. 더구나, 클라우드 컴퓨팅 패러다임은 이동성을 지원하지 않는 문제도 가지고 있다.</p></li>
<li><p>앞서 언급한 문제를 해결하기 위해 <strong>에지 컴퓨팅</strong>을 스마트 그리드 네트워크에 클라우드 컴퓨팅과 함께 중간 컴퓨팅 및 저장 시스템으로 통합할 수 있다. 에지 컴퓨팅 기술은 주로 <strong>포그 컴퓨팅</strong>, <strong>모바일 에지 컴퓨팅</strong> 및 <strong>클라우드렛 컴퓨팅</strong>을 포함.</p></li>
<li><p>미래의 연구 전망에는 IoT 및 에지 컴퓨팅 기반 스마트 그리드 인프라에 정교한 기계 학습 도구를 도입하여 예측 분석, 데이터 필터링, 사이버 공격 탐지, 단기 예측, 에지에서의 부하 분해 등과 같은 다양한 기능을 수행하는 것이 포함될 수 있다. 클라우드에서 풍부한 양의 기록 데이터를 기반으로 훈련된 기계 학습 모델은 에지 디바이스에서의 실시간 추론을 통해 실현될 수 있다.</p></li>
<li><p>에지 컴퓨팅 패러다임 외에도 통신 네트워크의 최근 발전 및 <strong>5G 네트워크</strong>의 진화는 DSM, 그리드 모니터링, 그리드 제어 및 전기차 충전 및 방전 조정과 같은 다양한 스마트 그리드 서비스에 대한 네트워크 가상화 및 소프트웨어 정의 네트워크와 같은 혁신적인 5G 개념의 사용을 촉진하고 있다. 5G를 활용한 IoT의 스마트 그리드 적용은 높은 통신 속도, 동적인 특성, 저전력 소비, 견고한 보안 및 다양한 연결 기능으로 인해 더 나은 통신 인프라를 제공할 수 있다.</p></li>
<li><p>기계 학습 기술은 이러한 기술들이 제공하는 탁월한 예측 능력에 따라 5G를 지원하는 스마트 그리드 시스템에서 라디오 자원 할당의 최적화에 기여할 수 있다.</p></li>
</ul>
</section>
</section>
<section id="논문-정리-중-생략한-내용" class="level1">
<h1>논문 정리 중 생략한 내용</h1>
<ul>
<li><p>에지 컴퓨팅</p>
<ul>
<li>포그 컴퓨팅</li>
<li>모바일 에지 컴퓨팅</li>
<li>클라우드렛 컴퓨팅</li>
</ul></li>
</ul>
<p>정리하기.</p>
<p>전통적 방식은 - 단방향, passive - 수력, 화석연료 베이스</p>
<p>스마트 그리드는 - 양방향, 정보의 흐름 active - 재사용 가능한 에너지 베이스</p>
<ul>
<li>더 좋은 에너지 효율, 비용 효율, 적은 비용, 향상된 기능 등등 ..</li>
</ul>
<p>최근 몇 년간 스마트 그리드의 독보적인 문제에 접근하는 머신러닝 기반 기술 사용이 관측되는 트렌드</p>
<p>Smart grid의 challenges</p>
<ul>
<li><p>electric load and price forecasting</p>
<ul>
<li>전력 수요 예측은 전력 공급 및 유통을 최적화하고 에너지 효율성을 향상시키는 데 도움이 된다. 또한 가격 예측은 사용자에게 최적의 전력 소비 시간을 선택할 수 있도록 도움을 준다.</li>
</ul></li>
<li><p>renewable power generation prediction - 재생가능 에너지의 효과적인 통합을 위해서는 향후 발전량을 정확하게 예측하는 것이 필요.</p></li>
<li><p>fault and failure analysis</p>
<ul>
<li>전력 시스템의 안정성을 유지하기 위해 필요. 신속하게 고장을 감지하고 이에 대응함으로써 전력 시스템의 중단을 최소화하고 서비스 품질을 개선할 수 있다.</li>
</ul></li>
<li><p>demand-side management(DSM) / load management</p>
<ul>
<li>전력 수요를 조절하여 그리드 부하를 분산시키고 최적화하는 것. 이를 통해 에너지 소비를 낮추고 전력 네트워크의 효율성을 향상시킬 수 있다.</li>
</ul></li>
<li><p>NILM :</p>
<ul>
<li>비침입적으로 가정이나 사업장에서의 전력 사용을 모니터링하는 기술. 각 전기 기기의 전력 패턴을 분석하여 에너지 사용을 식별하고 이를 통해 에너지 사용 패턴을 최적화할 수 있다.</li>
</ul></li>
<li><p>cyber-attack detection</p>
<ul>
<li>스마트 그리드는 전산 네트워크에 의존하므로 사이버 공격에 노출될 수 있다. 사이버 공격 탐지는 악성 행위를 식별하고 방어하는데 중요하다.</li>
</ul></li>
<li><p>energy and economic dispatch</p>
<ul>
<li>전력 생산 장치의 작동을 최적화하여 에너지 효율성을 극대화하고 경제적 비용을 최소화하는 것을 목표로 한다. 이는 전력 그리드의 운영을 최적화하고 에너지 비용을 관리하는 데 도움이 된다.</li>
</ul></li>
<li><p>이러한 챌린지들에 대한 연구와 개발은 스마트 그리드의 안정성, 효율성, 그리고 신뢰성을 향상시키는 데 기여하며, 지속 가능한 전력 시스템의 구현을 지원한다.</p></li>
</ul>


</section>

 ]]></description>
  <guid>https://star77sa.github.io/posts/Paper/smartgrid1.html</guid>
  <pubDate>Thu, 18 Jan 2024 15:00:00 GMT</pubDate>
</item>
<item>
  <title>2024 GIST-NVAITC Korea 강연 내용</title>
  <dc:creator>고경수 </dc:creator>
  <link>https://star77sa.github.io/posts/etc/NVIDIA초청강연.html</link>
  <description><![CDATA[ 





<ul>
<li>TinyLlama
<ul>
<li>A compact 1.1B language model (↔︎ 거대 언어 모델) pretrained on around 1 trillion tokens for approximately 3 epochs.</li>
</ul></li>
<li>PEFT
<ul>
<li>PEFT: huggingface.co/docs/transformers/main/en/peft</li>
<li>Parameter-Efficient Fine-Tuning of Billion-Scale Models on Low-Resource Hardware</li>
<li>문제점 1 : 모델이 점점 커짐에 따라 시판 그래픽카드로 모델 전체를 파인튜닝하는것은 불가능해져가고있다.</li>
<li>문제점 2 : 파인튜닝된 모델이 파인튜닝하기 이전의 사전학습된 모델과 똑같은 크기이기 때문에 파인튜닝된 모델을 사용하는 것 또한 (시간, 경제적으로) 비용이 많이 드는 일</li>
<li>대부분의 파라미터를 프리징하고 일부의 파라미터만을 파인튜닝함으로써 저장공간과 계산을 대폭 줄였다. 파인튜닝할때 발생하는 문제점 중 하나인 catastrophic forgetting 또한 극복</li>
<li>적은 데이터 체제(low-data-regime)에서 파인튜닝할때나 도메인 밖의 데이터(out-of-domain scenario)를 일반화할때 더욱 좋은 성능</li>
<li><strong>PEFT는 적은 수의 파라미터를 학습하는것만으로 모델 전체를 파인튜닝하는 것과 유사한 효과를 누릴 수 있도록 해준다.</strong></li>
</ul></li>
</ul>
<section id="library" class="level3 page-columns page-full">
<h3 class="anchored" data-anchor-id="library">Library</h3>
<ul class="page-columns page-full">
<li><p>bitsandbytes</p>
<ul>
<li>model을 8-bit 포맷으로 set up하여 큰 gpu가 필요하지 않음.</li>
<li>행렬 곱을 연산할 때 각 벡터를 독립적으로 처리하는 Vector-wise Quantization 방법을 적용하고 중요한 벡터는 16-bit로 표현하여 손실을 최소화 하는 등 8-bit와 16-bit를 혼용하는 기법을 통해 모델의 성능은 유지하면서 크기는 줄이는 성과를 보였다.</li>
</ul></li>
<li><p>accelerate</p>
<ul>
<li><p>기본 pytorch 코드를 통해 multi gpu를 사용하면 (DDP) 0번 gpu만 100% 사용되고 나머지 gpu는 예를 들어 60% 정도씩 덜 활용된다.</p>
<p>각 gpu에서 loss를 계산하고 각 결과를 합해서 최종 loss를 구해야 하는데 합하는 연산을 0번 device에서 하기 때문에 0번의 소모만 커지기 때문.</p>
<p>accelerate를 사용하면 이러한 문제를 해결할 수 있다.</p></li>
</ul></li>
<li><p>DeepSpeed</p>
<ul>
<li>스케일링 등을 통해 학습 속도를 가속화하는 라이브러리</li>
<li>floating point를 32에서 16으로 줄이는 등의 스케일을 적용하여 학습 속도를 줄이지만 성능이 저하된다. 예를 들어 하루종일 걸리는 학습을 30분 정도(stage 3)로 단축하지만 성능도 그만큼 감수해야 한다. 때문에 분류 문제처럼 acc가 중요한 문제에는 DeepSpeed를 덜 사용하거나 사용하지 않는게 좋고, 텍스트 생성모델처럼 정량적 평가가 크게 중요하지 않은 문제(정성적 평가의 비중이 큰 문제)에는 DeepSpeed를 써도 감수할 만 하다</li>
</ul></li>
<li><p>from transformers import pipeline</p>
<ul>
<li>여러 모델을 묶어준다.</li>
</ul>
<pre><code>pipe = pipeline("text-generation",
            model="TinyLlama/TinyLlama-1.1B-Chat-v1.0",
            torch_dtype=torch.bfloat16,
            device_map="auto")</code></pre></li>
<li class="page-columns page-full"><p>bf16: brainfloat16</p>
<ul>
<li>장점:넓은 수의 표현 범위 / 단점 : 표현 정밀도가 떨어지기 때문에 예를 들어 0에 가까운 수가 모조리 0으로 표현될 수 있음. 이 단점은 단지 숫자가 0이 되는것보다도 어떤 수를 0으로 나누는 상황이 생길 가능성을 높여서 문제이다.</li>
</ul>
<div class="quarto-figure quarto-figure-center page-columns page-full">
<figure class="figure page-columns page-full">
<p><img src="https://star77sa.github.io/posts/etc/NVIDIA초청강연_files/figure-html/cell-4-1-image.png" class="img-fluid figure-img"></p>
<figcaption class="margin-caption">image.png</figcaption>
</figure>
</div></li>
<li><p>chatgpt guidance 공개 안해줌.</p></li>
<li><p>causal을 사용하기에 prompt를 유저에게 보여주지 않기 위해 삭제 replace(prompt, “”)</p></li>
<li><p>chatgpt에서는 사용자와의 대화 history까지 input으로 들어가 마치 기억하는 것처럼 보임. 여기서는 아니기 때문에 과거에 예시를 새로운 것으로 착각하여 중복된 output을 낼 가능성이 있음. 때문에 input을 할 때 token에 과거의 output을 넣어주어야 하는데 token에 넣을 수 있는 메모리가 가득 차면 더 이상 생성할 수 없는 limitation이 있음.</p></li>
<li><p>dp: import data_parallel as dp</p>
<table class="table">
<colgroup>
<col style="width: 50%">
<col style="width: 50%">
</colgroup>
<thead>
<tr class="header">
<th>DataParallel</th>
<th>DistributedDataParallel</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td>More overhead; model is replicated and destroyed at each forward pass</td>
<td>Model is replicated only once</td>
</tr>
<tr class="even">
<td>Only supports single-node parallelism</td>
<td>Supports scaling to multiple machines</td>
</tr>
<tr class="odd">
<td>Slower; uses multithreading on a single process and runs into Global Interpreter Lock (GIL) contention</td>
<td>Faster (no GIL contention) because it uses multiprocessing</td>
</tr>
</tbody>
</table></li>
<li><p>multi_node는 accelerater가 해줌.</p></li>
<li><p><strong>tinyllama로 peft를 켜서 모델을 생성 후 open dataset으로 실행 -&gt; instruction dataset으로 실행, dp, ddp 사용</strong></p></li>
<li><p>AICA, GIST, nipa 등 연구원 전용 지원 혜택 받기</p></li>
<li><p>colab은 multi gpu가 안됨</p></li>
<li><p>colab pro + peft정도면 논문에 쓸 데이터 정도는 학습 가능</p></li>
<li><p>파운데이션 모델 끝단 변경(파인튜닝) + AI로 데이터 생성 =&gt; 논문채택 ↑</p>
<ul>
<li>사전학습 X</li>
</ul></li>
</ul>


</section>

 ]]></description>
  <guid>https://star77sa.github.io/posts/etc/NVIDIA초청강연.html</guid>
  <pubDate>Tue, 16 Jan 2024 15:00:00 GMT</pubDate>
</item>
</channel>
</rss>
